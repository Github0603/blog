-- phpMyAdmin SQL Dump
-- version 4.1.14
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: 2016-06-12 16:26:10
-- 服务器版本： 5.6.17
-- PHP Version: 5.5.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `blog`
--

-- --------------------------------------------------------

--
-- 表的结构 `hd_attr`
--

CREATE TABLE IF NOT EXISTS `hd_attr` (
  `id` int(3) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `color` varchar(8) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=5 ;

--
-- 转存表中的数据 `hd_attr`
--

INSERT INTO `hd_attr` (`id`, `name`, `color`) VALUES
(1, '推荐', 'green'),
(2, '置顶', 'red'),
(3, '精华', 'blue');

-- --------------------------------------------------------

--
-- 表的结构 `hd_blog`
--

CREATE TABLE IF NOT EXISTS `hd_blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `content` text NOT NULL,
  `summary` varchar(255) NOT NULL,
  `time` int(15) NOT NULL,
  `cid` int(10) unsigned NOT NULL,
  `del` tinyint(4) NOT NULL DEFAULT '0',
  `click` int(5) unsigned NOT NULL DEFAULT '100',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=21 ;

--
-- 转存表中的数据 `hd_blog`
--

INSERT INTO `hd_blog` (`id`, `title`, `content`, `summary`, `time`, `cid`, `del`, `click`) VALUES
(1, '其他测试', '&lt;p&gt;这是一篇测试博文&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://127.0.0.1/blog/Uploads/20160602/57503c4cc4472.jpg&quot; _src=&quot;http://127.0.0.1/blog/Uploads/20160602/57503c4cc4472.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;修改测试&lt;/p&gt;', '一篇其他测试文章', 1464876113, 0, 0, 10130),
(2, 'HTML是什么', '&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; HTML（Hyper Text Mark-up Language ）即超文本标记语言，是 WWW 的描述语言，由 Tim Berners-lee提出。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;设计HTML 语言的目的是为了能把存放在一台电脑中的文本或图形与另一台电脑中的文本或图形方便地联系在一起，形成有机的整体，人们不用考虑具体信息是在当前电脑上&lt;/span&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;还是在网络的其它电脑上。&lt;/span&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;这样，你只要使用鼠标在某一文档中点取一个图标，Internet就会马上转到与此图标相关的内容上去，而这些信息可能存放在网络的另一台电脑中。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; HTML文本是由 HTML命令组成的描述性文本，HTML 命令可以说明文字、 图形、动画、声音、表格、链接等。 HTML的结构包括头部 (Head)、主体 (Body) 两大部分。&lt;/span&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;头部描述浏览器所需的信息，主体包含所要说明的具体内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '简单介绍html', 1463986644, 1, 0, 439),
(3, 'DOM是什么', '&lt;pre id=&quot;recommend-content-1549156258&quot; accuse=&quot;aContent&quot; class=&quot;recommend-text mb-10&quot; style=&quot;margin-bottom: 10px; font-family: arial, &amp;#39;courier new&amp;#39;, courier, 宋体, monospace, &amp;#39;Microsoft YaHei&amp;#39;; white-space: pre-wrap; word-wrap: break-word; color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(243, 255, 236);&quot;&gt;DOM全称是document object model(&lt;a href=&quot;https://www.baidu.com/s?wd=%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dBPjfLPW-BmyDzPW0LuHcd0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EP1fYnW0LnHf3rHD1PWnkrjDz&quot; target=&quot;_blank&quot; class=&quot;baidu-highlight&quot; rel=&quot;nofollow&quot; style=&quot;color: rgb(45, 100, 179);&quot;&gt;文档对象模型&lt;/a&gt;)，DOM是用来干什么的呢？假设把你的文档看成一个单独的对象，DOM就是如何用HTML或者XML对这个对象进行操作和控制的标准。&lt;/pre&gt;', '简单介绍DOM', 1463986726, 29, 0, 129),
(4, 'HTML常用标签', '&lt;p&gt;常用HTML标签元素结合及简介&lt;/p&gt;&lt;p&gt;&amp;lt;html&amp;gt;&amp;lt;/html&amp;gt; 创建一个HTML文档&lt;/p&gt;&lt;p&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt; 设置文档标题和其它在网页中不显示的信息&lt;/p&gt;&lt;p&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; 设置文档的标题 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt; 最大的标题&lt;/p&gt;&lt;p&gt;&amp;lt;pre&amp;gt;&amp;lt;/pre&amp;gt; 预先格式化文本 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;u&amp;gt;&amp;lt;/u&amp;gt; 下划线&lt;/p&gt;&lt;p&gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt; 黑体字 &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt; 斜体字 &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;tt&amp;gt;&amp;lt;/tt&amp;gt; 打字机风格的字体&lt;/p&gt;&lt;p&gt;&amp;lt;cite&amp;gt;&amp;lt;/cite&amp;gt; 引用,通常是斜体 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt; 强调文本(通常是斜体加黑体)&lt;/p&gt;&lt;p&gt;&amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt; 加重文本(通常是斜体加黑体)&lt;/p&gt;&lt;p&gt;&amp;lt;font size=&amp;quot;&amp;quot; color=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/font&amp;gt; 设置字体大小从1到7，颜色使用名字或RGB的十六进制值&lt;/p&gt;&lt;p&gt;&amp;lt;BASEFONT&amp;gt;&amp;lt;/BASEFONT&amp;gt; 基准字体标记&lt;/p&gt;&lt;p&gt;&amp;lt;big&amp;gt;&amp;lt;/big&amp;gt; 字体加大&lt;/p&gt;&lt;p&gt;&amp;lt;SMALL&amp;gt;&amp;lt;/SMALL&amp;gt; 字体缩小 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;STRIKE&amp;gt;&amp;lt;/STRIKE&amp;gt; 加删除线&lt;/p&gt;&lt;p&gt;&amp;lt;CODE&amp;gt;&amp;lt;/CODE&amp;gt; 程式码 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;KBD&amp;gt;&amp;lt;/KBD&amp;gt; 键盘字&lt;/p&gt;&lt;p&gt;&amp;lt;SAMP&amp;gt;&amp;lt;/SAMP&amp;gt; 范例 &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;VAR&amp;gt;&amp;lt;/VAR&amp;gt; 变量&lt;/p&gt;&lt;p&gt;&amp;lt;BLOCKQUOTE&amp;gt;&amp;lt;/BLOCKQUOTE&amp;gt; 向右缩排&lt;/p&gt;&lt;p&gt;&amp;lt;DFN&amp;gt;&amp;lt;/DFN&amp;gt; 述语定义&lt;/p&gt;&lt;p&gt;&amp;lt;ADDRESS&amp;gt;&amp;lt;/ADDRESS&amp;gt; 地址标记&lt;/p&gt;&lt;p&gt;&amp;lt;sup&amp;gt;&amp;lt;/SUP&amp;gt; 上标字 &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;SUB&amp;gt;&amp;lt;/SUB&amp;gt; 下标字&lt;/p&gt;&lt;p&gt;&amp;lt;xmp&amp;gt;...&amp;lt;/xmp&amp;gt;固定寬度字体(在文件中空白、換行、定位功能有效)&lt;/p&gt;&lt;p&gt;&amp;lt;plaintext&amp;gt;...&amp;lt;/plaintext&amp;gt;固定寬度字體(不執行標記符號)&lt;/p&gt;&lt;p&gt;&amp;lt;listing&amp;gt;...&amp;lt;/listing&amp;gt; 固定寬度小字體 &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;font color=00ff00&amp;gt;...&amp;lt;/font&amp;gt;字體顏色&lt;/p&gt;&lt;p&gt;&amp;lt;font size=1&amp;gt;...&amp;lt;/font&amp;gt;最小字體 &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;lt;font style =&amp;#39;font-size:100 px&amp;#39;&amp;gt;...&amp;lt;/font&amp;gt;無限增大&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'HTML常用的几组标签', 1463986842, 28, 0, 57),
(5, 'JavaScript简介', '&lt;p&gt;1.JavaScript简介&lt;/p&gt;&lt;p&gt;&amp;nbsp;JavaScript是一种基于对象和事件驱动，并具有安全性的脚本语言。&lt;/p&gt;&lt;p&gt;&amp;nbsp;它与HTML,CSS结合起来，用于增强功能，并提高与最终用于之间的交互性能。&lt;/p&gt;&lt;p&gt;&amp;nbsp;客户端的JavaScript必须要有解释器的支持&lt;/p&gt;&lt;p&gt;&amp;nbsp;JavaScript代码是解释型的。不需要编译，而是作为HTML文件的一部分由解释器解释执行。&lt;/p&gt;&lt;p&gt;&amp;nbsp;目前，所有的浏览器都内置JavaScript的解释器&lt;/p&gt;&lt;p&gt;2.JavaScript的组成部分&lt;/p&gt;&lt;p&gt;&amp;nbsp;JavaScript由三部分组成：&lt;/p&gt;&lt;p&gt;&amp;nbsp;ECMAScript：定义了基本的语法和一些对象。核心&lt;/p&gt;&lt;p&gt;&amp;nbsp;每种Web浏览器都有对ECMAScript标准的实现&lt;/p&gt;&lt;p&gt;&amp;nbsp;DOM(Document Object Model)：文档对象模型，它是HTML和XML文档的应用程序编程接口。&lt;/p&gt;&lt;p&gt;&amp;nbsp;Web浏览器中的DOM把整个页面规划成由节点层级构成的文档。用DOM API可以轻松地删除、添加和替换节点。&lt;/p&gt;&lt;p&gt;&amp;nbsp;DOM不是JavaScript专有的。许多语言都实现了它。&lt;/p&gt;&lt;p&gt;&amp;nbsp;BOM(Browser Object Model)：浏览器对象模型，描述了与浏览器窗口进行访问和操作的方法和接口。&lt;/p&gt;&lt;p&gt;&amp;nbsp;BOM暂时没有相关的标准，每种浏览器对BOM的实现有些差别。&lt;/p&gt;&lt;p&gt;3.JavaScript的三种放置方式&lt;/p&gt;&lt;p&gt;&amp;nbsp;1.放置在&lt;/p&gt;&lt;p&gt;&amp;nbsp;2.将JS代码放置在一个单独的文件中，以.js为扩展名。要引用的页面用如下方式引入：&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;3.将脚本代码作为HTML标签的属性值：&lt;/p&gt;&lt;p&gt;&amp;nbsp;JavaScript&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;用作URL的JS代码前要增加javascript；作为事件属性值的JS代码则不要加。&lt;/p&gt;&lt;p&gt;4.JavaScript代码格式&lt;/p&gt;&lt;p&gt;&amp;nbsp;每条语句用分号(;)结束。但不是必须的。&lt;/p&gt;&lt;p&gt;&amp;nbsp;如果没有分号，则把换行看成是语句的结尾。&lt;/p&gt;&lt;p&gt;&amp;nbsp;注释：&lt;/p&gt;&lt;p&gt;&amp;nbsp;//单行注释&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;代码块放置在大括号{}之间。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;5.变量的声明&lt;/p&gt;&lt;p&gt;&amp;nbsp;JS采用弱类型的变量形式&lt;/p&gt;&lt;p&gt;&amp;nbsp;即声明一个变量时不必确定类型，而是在使用或赋值时自动确定其数据类型。&lt;/p&gt;&lt;p&gt;&amp;nbsp;为使代码更易于阅读，变量建议使用匈牙利命名法：&lt;/p&gt;&lt;p&gt;&amp;nbsp;如：数组 aValues、布尔型 bFound、浮点数 fValue、&lt;/p&gt;&lt;p&gt;&amp;nbsp;　　函数 fnMethod、 整数 iValue、对象 oType、&lt;/p&gt;&lt;p&gt;&amp;nbsp;　　字符串 sValue、正则表达式 rePattern、其它类型 vValue&lt;/p&gt;&lt;p&gt;&amp;nbsp;JS用关键字var声明变量：&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;在JS中也可以不事先声明变量而直接使用：&lt;/p&gt;&lt;p&gt;6.JavaScript基本数据类型&lt;/p&gt;&lt;p&gt;&amp;nbsp;Number类型&lt;/p&gt;&lt;p&gt;&amp;nbsp;整数：十进制、八进制、十六进制&lt;/p&gt;&lt;p&gt;&amp;nbsp;浮点数：带小数点的数字，可用科学记数法表示 var fNum = 3.1e7&lt;/p&gt;&lt;p&gt;&amp;nbsp;Boolean型&lt;/p&gt;&lt;p&gt;&amp;nbsp;true和false两个值，0表示false，非0表示true&lt;/p&gt;&lt;p&gt;&amp;nbsp;String型&lt;/p&gt;&lt;p&gt;&amp;nbsp;用单引号(&amp;#39;)或双引号(&amp;quot;)引起来的若干个字符。&lt;/p&gt;&lt;p&gt;&amp;nbsp;转义字符&lt;/p&gt;&lt;p&gt;&amp;nbsp;\\r 回车、\\n 换行、\\t 制表符、\\&amp;#39; 单引号、\\&amp;quot; 双引号、\\\\ 表示一个斜杠&lt;/p&gt;&lt;p&gt;&amp;nbsp;null：表示还不存在的对象。可看成对象的占位符。&lt;/p&gt;&lt;p&gt;&amp;nbsp;undefined：表示声明了变量，但尚未赋值。&lt;/p&gt;&lt;p&gt;&amp;nbsp;如：var oTemp; &amp;nbsp;alert(oTemp);&lt;/p&gt;&lt;p&gt;&amp;nbsp;它是从null派生来。 alert(null == undefined); &amp;nbsp;//true&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;7.typeof&lt;/p&gt;&lt;p&gt;&amp;nbsp;typeof运算符&lt;/p&gt;&lt;p&gt;&amp;nbsp;检查变量或值的类型： alert(typeof &amp;nbsp;95.5);&lt;/p&gt;&lt;p&gt;8.JavaScript类型转换&lt;/p&gt;&lt;p&gt;&amp;nbsp;转换成字符串&lt;/p&gt;&lt;p&gt;&amp;nbsp;ECMAScript的基本数据类型都有toString()方法，可以把它们的值直接转换成字符串&lt;/p&gt;&lt;p&gt;&amp;nbsp;如：var &amp;nbsp;fNum1 = 10.0; &amp;nbsp; &amp;nbsp;alert(fNum1.toString());&lt;/p&gt;&lt;p&gt;&amp;nbsp;转换成数字&lt;/p&gt;&lt;p&gt;&amp;nbsp;ECMAScript提供了两个方法：parseInt()和parseFloat()，可以把String类型变量转换成数字。&lt;/p&gt;&lt;p&gt;&amp;nbsp;如：var iNum1 = parseInt(&amp;quot;123ab&amp;quot;); &amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var fNum1 = parseInt(&amp;quot;123a&amp;quot;);&lt;/p&gt;&lt;p&gt;&amp;nbsp;强制类型转换&lt;/p&gt;&lt;p&gt;&amp;nbsp;ECMAScript中有可用的3种强制类型转换&lt;/p&gt;&lt;p&gt;&amp;nbsp;Boolean(value)　把给定的值转换成Boolean型&lt;/p&gt;&lt;p&gt;&amp;nbsp;Number(value)　把给定的值转换成数字(可以是整数和浮点数)&lt;/p&gt;&lt;p&gt;&amp;nbsp;String(value)　把给定的值转换成字符串&lt;/p&gt;&lt;p&gt;&amp;nbsp;var iNum = Number(100);&lt;/p&gt;&lt;p&gt;9.在javascript中逻辑运算符只支持： &amp;amp;&amp;amp;、||、!&lt;/p&gt;&lt;p&gt;10.JavaScript中函数的定义语法&lt;/p&gt;&lt;p&gt;&amp;nbsp; 函数的基本语法：&lt;/p&gt;&lt;p&gt;&amp;nbsp; function 函数名(参数1,参数2,..参数n) &amp;nbsp;{&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 程序代码;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[return 值;]&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;&amp;nbsp;多个参数由逗号分隔，注意不能用var声明参数&lt;/p&gt;&lt;p&gt;&amp;nbsp;不需要声明返回值类型&lt;/p&gt;&lt;p&gt;&amp;nbsp;JS中的函数不能重载，后定义的函数会覆盖前面定义的同名函数：&lt;/p&gt;&lt;p&gt;&amp;nbsp;JS不会验证传递给函数的参数个数是否等于函数定义的参数个数。自定义的函数都可以接收任意个数的参数。&lt;/p&gt;&lt;p&gt;11.arguments对象的使用&lt;/p&gt;&lt;p&gt;&amp;nbsp;在函数内部的程序代码中，可以使用一个名为arguments的对象，&lt;/p&gt;&lt;p&gt;&amp;nbsp;这是一个数组对象，其中包含了调用此函数传递的所有参数。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;12.全局变量：在所有函数之外定义的变量，使用范围是这个变量定义之后的所有语句。&lt;/p&gt;&lt;p&gt;&amp;nbsp;局部变量：定义在函数代码之内的变量，只可以在这个函数体内可以使用。&lt;/p&gt;&lt;p&gt;13.JavaScript对象的类型&lt;/p&gt;&lt;p&gt;&amp;nbsp;可以创建并使用的对象有三种：&lt;/p&gt;&lt;p&gt;&amp;nbsp;本地对象：独立于宿主环境的ECMAScript实现提供的类&lt;/p&gt;&lt;p&gt;&amp;nbsp;Object、Number、Boolean、String、Array、Date、RegExp、Function&lt;/p&gt;&lt;p&gt;&amp;nbsp;内置对象：特殊的本地对象，在ECMAScript程序开始执行时已经被实例化的对象。&lt;/p&gt;&lt;p&gt;&amp;nbsp;Global对象、Math对象&lt;/p&gt;&lt;p&gt;&amp;nbsp;宿主对象：所有非本地对象。由ECMAScript实现的宿主环境提供的对象。&lt;/p&gt;&lt;p&gt;&amp;nbsp;所有的BOM和DOM对象都是宿主对象。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;14.Object类&lt;/p&gt;&lt;p&gt;&amp;nbsp;所有类的根类，ECMAScript是的所有类都继承自这个类。&lt;/p&gt;&lt;p&gt;&amp;nbsp;属性&lt;/p&gt;&lt;p&gt;&amp;nbsp;prototype 对该对象的对象原型的引用&lt;/p&gt;&lt;p&gt;&amp;nbsp;方法&lt;/p&gt;&lt;p&gt;&amp;nbsp;toString() 对象的原始字符串表示&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;15.String类&lt;/p&gt;&lt;p&gt;&amp;nbsp;它是基本数据类型“字符串”的对象表示法，一般利用String类提供的函数来处理字符串。&lt;/p&gt;&lt;p&gt;&amp;nbsp;属性：&lt;/p&gt;&lt;p&gt;&amp;nbsp;length：得到字符串的字符个数&lt;/p&gt;&lt;p&gt;&amp;nbsp;常用方法：&lt;/p&gt;&lt;p&gt;&amp;nbsp;charAt(dx)：返回指定位置处的字符&lt;/p&gt;&lt;p&gt;&amp;nbsp;indexOf(chr)：返回指定子字符串的位置，从左到右。找不到返回-1。&lt;/p&gt;&lt;p&gt;&amp;nbsp;lastIndexOf(chr)：返回指定子字符串的位置，从右到左。找不到返回-1。&lt;/p&gt;&lt;p&gt;&amp;nbsp;substring(start, end)：返回从start位置到end位置(不包括)的子串&lt;/p&gt;&lt;p&gt;&amp;nbsp;toLowerCase()：将字符串中的字符全部转化成小写&lt;/p&gt;&lt;p&gt;&amp;nbsp;toUpperCase()：将字符串中的字符全部转化成大写&lt;/p&gt;&lt;p&gt;&amp;nbsp;split()：返回按照指定的分隔符(可以是正则表达式)拆分后的字符串数组&lt;/p&gt;&lt;p&gt;&amp;nbsp;replace(regexp, newSubStr)：使用正则表达式搜索，搜索到的内容用指定的字符串替换。&lt;/p&gt;&lt;p&gt;&amp;nbsp;match(regexp) ：使用正则表达式进行匹配搜索，返回搜索结果的数组。&lt;/p&gt;&lt;p&gt;16.Date类&lt;/p&gt;&lt;p&gt;&amp;nbsp;Date类表示日期和时间&lt;/p&gt;&lt;p&gt;&amp;nbsp;它存储的是距离1970年1月1日0时0分0秒的毫秒数&lt;/p&gt;&lt;p&gt;&amp;nbsp;主要方法：&lt;/p&gt;&lt;p&gt;&amp;nbsp;构造方法：Date()&lt;/p&gt;&lt;p&gt;&amp;nbsp;静态方法：parse(str) 把一个字符串解析成日期值。&lt;/p&gt;&lt;p&gt;&amp;nbsp;例：　alert(Date.parse(&amp;quot;11/08/2008&amp;quot;));&lt;/p&gt;&lt;p&gt;&amp;nbsp;getFullYear()、setFullYear()：年&lt;/p&gt;&lt;p&gt;&amp;nbsp;getMonth()、setMonth()： 月份值0-11&lt;/p&gt;&lt;p&gt;&amp;nbsp;getDate()、setDate()：该月中某天&lt;/p&gt;&lt;p&gt;&amp;nbsp;getDay()、setDay()：星期几&lt;/p&gt;&lt;p&gt;&amp;nbsp;getHours()、setHours()：小时数。&lt;/p&gt;&lt;p&gt;&amp;nbsp;getMinutes()、setMinutes()：分钟数&lt;/p&gt;&lt;p&gt;&amp;nbsp;getSeconds()、setSeconds()：秒数&lt;/p&gt;&lt;p&gt;&amp;nbsp;getTime()、距1970.01.01.00:00:00的毫秒值&lt;/p&gt;&lt;p&gt;&amp;nbsp;toLocaleString()　以本地环境显示Date的日期和时间&lt;/p&gt;&lt;p&gt;&amp;nbsp;toLocaleDateString()&lt;/p&gt;&lt;p&gt;&amp;nbsp;toLocaleTimeString()&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;17.Global对象&lt;/p&gt;&lt;p&gt;&amp;nbsp;Global对象实际上根本不存在，它提供的方法都是直接使用的：&lt;/p&gt;&lt;p&gt;&amp;nbsp;encodeURI(string)　返回对一个URI字符串编码后的结果。(用专门的UTF-8编码替换所有的非有效字符)。不对URI中的ASCII字母和数字以及;/?:@&amp;amp;=+$,# - _ . ! ~ * &amp;#39; ( )这些符号编码。&lt;/p&gt;&lt;p&gt;&amp;nbsp;decodeURI(string)　将一个已编码的URI字符串解码成最初的字符串并返回。&lt;/p&gt;&lt;p&gt;&amp;nbsp;encodeURIComponent(str)　返回对URI字符串编码后的结果。不会被此方法编码的字符：! * ( )&lt;/p&gt;&lt;p&gt;&amp;nbsp;decodeURIComponent(str)　解码&lt;/p&gt;&lt;p&gt;&amp;nbsp;parseInt(string[, radix])　将一个字符串转按指定的进制换成一个整数。&lt;/p&gt;&lt;p&gt;&amp;nbsp;parseFloat(string)　将一个字符串转换成对应的小数。&lt;/p&gt;&lt;p&gt;&amp;nbsp;isNaN(testValue) &amp;nbsp; 检测parseInt和parseFloat方法的返回值是否为NaN(not a number)。&lt;/p&gt;&lt;p&gt;&amp;nbsp;eval_r(str)　计算JavaScript字符串，并把它作为脚本代码来执行。&lt;/p&gt;&lt;p&gt;18.with语句&lt;/p&gt;&lt;p&gt;&amp;nbsp;with语句：&lt;/p&gt;&lt;p&gt;with(对象名称){ &amp;nbsp; 执行语句块　}&lt;/p&gt;&lt;p&gt;如果一段连接的程序代码中，多次使用到了某个对象的许多属性和方法。只要在with括号中写出对象变量的名称，然后就可以在随后的大括号中直接引用对象实例的的属性名和方法名，不必每个属性和方法名前都加上对象实例名。&lt;/p&gt;&lt;p&gt;19.for in语句&lt;/p&gt;&lt;p&gt;&amp;nbsp;for…in语句：&lt;/p&gt;&lt;p&gt;for(变量 in 对象){ &amp;nbsp; 执行语句块　}&lt;/p&gt;&lt;p&gt;用于对某个对象的所有属性进行循环操作，它将一个对象的所有属性名逐一赋值给一个变量。&lt;/p&gt;&lt;p&gt;20.数组&lt;/p&gt;&lt;p&gt;&amp;nbsp;数组用于表示一组数据的集合。JS提供的本地对象Array类就是用来创建数组的。&lt;/p&gt;&lt;p&gt;&amp;nbsp;常用构造函数:&lt;/p&gt;&lt;p&gt;&amp;nbsp;Array()　创建一个元素个数为0的数组对象&lt;/p&gt;&lt;p&gt;&amp;nbsp;Array(4)　创建具有指定大小的数组对象&lt;/p&gt;&lt;p&gt;&amp;nbsp;Array(3.5, “abc”, 3)　创建并初始化数组对象&lt;/p&gt;&lt;p&gt;&amp;nbsp;数组中的元素可以通过下标来访问，下标(索引)从0&lt;/p&gt;&lt;p&gt;&amp;nbsp;常用属性：&lt;/p&gt;&lt;p&gt;&amp;nbsp;length　获取数组的元素个数&lt;/p&gt;&lt;p&gt;&amp;nbsp;常用方法：&lt;/p&gt;&lt;p&gt;&amp;nbsp;toString()　把数组的每项用逗号连接成字符串返回&lt;/p&gt;&lt;p&gt;&amp;nbsp;join(&amp;quot;连接符&amp;quot;) 把数组的每项用指定的连接符连成字符串返回&lt;/p&gt;&lt;p&gt;&amp;nbsp;reverse()　反转元素，并且返回数组&lt;/p&gt;&lt;p&gt;&amp;nbsp;sort() 　对数组按字符编码的顺序进行排序，并且返回数组&lt;/p&gt;&lt;p&gt;&amp;nbsp;pop()　移除最后一个元素并返回该元素值&lt;/p&gt;&lt;p&gt;&amp;nbsp;shift ()　移除第一个元素并返回该元素值，后面的元素前移&lt;/p&gt;&lt;p&gt;&amp;nbsp;push()　将一个或多个新元素添加到数组结尾，并返回数组新长度&lt;/p&gt;&lt;p&gt;&amp;nbsp;unshift()　将一个或多个新元素添加到数组开头，并返回数组新长度。&lt;/p&gt;&lt;p&gt;21.JSON认识&lt;/p&gt;&lt;p&gt;&amp;nbsp;JavaScript Object Notation：是一种轻量级的数据交换格式。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'JavaScript简单介绍', 1463986914, 3, 0, 832),
(6, 'jQuery的优势介绍', '&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; 1、轻量级&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery非常轻巧，采用Dean Edwards编写的Packer压缩后，大小不到30KB,如果使用Min版并且在服务器端启用Gzip压缩后，大小只有18KB。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp;2、强大的选择器&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery允许开发者使用从CSS1到CSS3几乎所有的选择器，以及JQuery独创的高级而且复杂的选择器，另外还可以加入插件使其支持XPath选择器，甚至开发者可以编写属于自己的选择器。由于JQuery支持选择器这一特性，因此有一定CSS经验的开发人员可以很容易的切入到JQuery的学习中来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; 3、出色的DOM操作的封装&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery封装了大量常用的DOM操作，使开发者在编写DOM操作相关程序的时候能够得心应手。JQuery轻松地完成各种原本非常复杂的操作，让JavaScript新手也能写出出色的程序。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; 4、可靠的事件处理机制&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery的事件处理机制吸收了JavaScript专家Dean Edwards编写的事件处理函数的精华，是的JQuery在处理事件绑定的时候相当可靠。在预留退路、循序渐进以及非入侵式编程思想方面，JQuery也做得非常不错。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; 5、完善的Ajax&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery将所有的Ajax操作封装到一个函数$.ajax()里，使得开发者处理Ajax的时候能够专心处理业务逻辑而无需关心复杂的浏览器兼容性和XMLHttpRequest对象的创建和使用的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; 6、不污染顶级变量&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery只建立一个名为JQuery的对象，其所有的函数方法都在这个对象之下。其别名$也可以随时交流控制权，绝对不会污染其他的对象。该特性是JQuery可以与其他JavaScript库共存，在项目中放心地引用而不需要考虑到后期的冲突。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; 7、出色的浏览器兼容性&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; 作为一个流行的JavaScript库，浏览器的兼容性是必须具备的条件之一。JQuery能够在IE6.0+,FF 2+,Safari2.+和Opera9.0+下正常运行。JQuery同时修复了一些浏览器之间的的差异，使开发者不必在开展项目前建立浏览器兼容库。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; 8、链式操作方式&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;JQuery中最有特色的莫过于它的链式操作方式——即对发生在同一个JQuery对象上的一组动作，可以直接接连写无需要重复获取对象。这一特点使得JQuery的代码无比优雅。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; 9.隐式迭代&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; 当用JQuery找到带有“.myClass”类的全部元素，然后隐藏他们时。无需循环遍历每一个返回的元素。相反，JQuery里的方法都被设计成自动操作的对象集合，而不是单独的对象，这使得大量的循环结构变得不再必要，从而大幅度地减少代码量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; 10、行为层与结构层的分离&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp;开发者可以使用选择器选中元素，然后直接给元素添加事件。这种将行为层与结构层完全分离的思想，可以使JQuery开发人员和HTML或其他页面开发人员各司其职，摆脱过去开发冲突或个人单干的开发模式。同时，后期维护也非常方便，不需要在HTML代码中寻找某些函数和重复修改HTML代码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp;11、丰富的插件支持&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery的易扩展性，吸引了来自全球开发者来编写JQuery的扩展插件。目前已经有超过几百种官方插件支持，而且还不断有新插件面试。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp;12、完善的文档&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery的文档非常丰富，现阶段多位英文文档，中文文档相对较少。很多热爱JQuery的团队都在努力完善JQuery中文文档，例如JQuery的中文API。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp;13、开源&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; JQuery是一个开源的产品，任何人都可以自由地使用并提出修改意见。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'jQuery的几个优势', 1463986976, 14, 0, 456),
(7, 'Ajax简介', '&lt;p&gt;AJAX = Asynchronous JavaScript And XML（异步 JavaScript 及 XML）&lt;/p&gt;&lt;p&gt;AJAX 是 Asynchronous JavaScript And XML 的首字母缩写。&lt;/p&gt;&lt;p&gt;AJAX 并不是一种新的编程语言，而仅仅是一种新的技术，它可以创建更好、更快且交互性更强的 web 应用程序。&lt;/p&gt;&lt;p&gt;AJAX 使用 JavaScript 在 web 浏览器与 web 服务器之间来发送和接收数据。&lt;/p&gt;&lt;p&gt;通过在幕后与 web 服务器交换数据，而不是每当用户作出改变时重载整个 web 页面，AJAX 技术可以使网页更迅速地响应。&lt;/p&gt;&lt;p&gt;AJAX 基于开放的标准&lt;/p&gt;&lt;p&gt;AJAX 基于以下开放的标准：&lt;/p&gt;&lt;p&gt;JavaScript&lt;/p&gt;&lt;p&gt;XML&lt;/p&gt;&lt;p&gt;HTML&lt;/p&gt;&lt;p&gt;CSS&lt;/p&gt;&lt;p&gt;在 AJAX 中使用的开放标准被良好地定义，并得到所有主要浏览器的支持。AJAX 应用程序独立于浏览器和平台。（可以说，它是一种跨平台跨浏览器的技术）。&lt;/p&gt;&lt;p&gt;AJAX 事关更好的 Internet 应用程序&lt;/p&gt;&lt;p&gt;与桌面应用程序相比，Web 应用程序有很多优势：&lt;/p&gt;&lt;p&gt;可拥有更多用户&lt;/p&gt;&lt;p&gt;更容易安装和维护&lt;/p&gt;&lt;p&gt;更容易开发&lt;/p&gt;&lt;p&gt;但是， 应用程序不总是象传统应用程序那样强大和友好。&lt;/p&gt;&lt;p&gt;通过 AJAX，可以使 Internet 应用程序更加强大（更轻巧、更快速，且更易使用）。&lt;/p&gt;&lt;p&gt;今天您就可以开始使用 AJAX&lt;/p&gt;&lt;p&gt;没有什么新知识需要学习。&lt;/p&gt;&lt;p&gt;AJAX 基于开放的标准。而这些标准已被大多数开发者使用多年。&lt;/p&gt;&lt;p&gt;大多数 web 应用程序可通过使用 AJAX 技术进行重写，来替代传统的 HTML 表单。&lt;/p&gt;&lt;p&gt;AJAX 使用 XML 和 HTTP 请求&lt;/p&gt;&lt;p&gt;传统的 web 应用程序会把数据提交到 web 服务器（使用 HTML 表单）。在 web 服务器把数据处理完毕之后，会向用户返回一张完整的新网页。&lt;/p&gt;&lt;p&gt;由于每当用户提交输入，服务器就会返回新网页，传统的 web 应用程序往往运行缓慢，且越来越不友好。&lt;/p&gt;&lt;p&gt;通过 AJAX，web 应用程序无需重载网页，就可以发送并取回数据。完成这项工作，需要通过向服务器发送 HTTP 请求（在幕后），并通过当服务器返回数据时使用 JavaScript 仅仅修改网页的某部分。&lt;/p&gt;&lt;p&gt;一般使用 XML 作为接收服务器数据的格式，尽管可以使用任何格式，包括纯文本。&lt;/p&gt;&lt;p&gt;您将在本教程接下来的章节学习到如何完成这些工作。&lt;/p&gt;&lt;p&gt;PHP 和 AJAX&lt;/p&gt;&lt;p&gt;不存在什么 AJAX 服务器。&lt;/p&gt;&lt;p&gt;AJAX 是一种在浏览器运行的技术。它使用浏览器与 web 服务器之间的异步数据传输，使网页从服务器请求少量的信息，而不是整张页面。&lt;/p&gt;&lt;p&gt;AJAX 是一种独立于 web 服务器软件的 web 浏览器技术。&lt;/p&gt;&lt;p&gt;但是，在本教程中，我们将集中在运行在 PHP 服务器上的实际案例，而不是 AJAX 的工作原理。&lt;/p&gt;&lt;p&gt;如需阅读更多有关 AJAX 如何工作的知识，请访问我们的 AJAX 教程。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'ajax的基本介绍', 1463987019, 17, 0, 116),
(8, 'PHP简介', '&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; PHP是一种易于学习和使用的服务器端脚本语言。只需要很少的编程知识你就能使用PHP建立一个真正交互的WEB站点。本教程并不想让你完全了解这种语言，只是能使你尽快加入开发动态web站点的行列。我假定你有一些HTML（或者HTML编辑器）的基本知识和一些编程思想。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;1.简介&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP是能让你生成动态网页的工具之一。PHP网页文件被当作一般HTML网页文件来处理并且在编辑时你可以用编辑HTML的常规方法编写PHP。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP代表：超文本预处理器（PHP: Hypertext Preprocessor）。PHP是完全免费的，不用花钱，你可以从PHP官方站点(http://www.php.net)自由下载。PHP遵守GNU公共许可（GPL)，在这一许可下诞生了许多流行的软件诸如Linux和Emacs。你可以不受限制的获得源码，甚至可以从中加进你自己需要的特色。PHP在大多数Unix平台，GUN/Linux和微软Windows平台上均可以运行。怎样在Windows环境的PC机器或Unix机器上安装PHP的资料可以在PHP官方站点上找到。安装过程很简单。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;如果你的机器解决了2000问题，那么PHP也一样没有千年虫问题！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;1.1 历史&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;三年前，Rasmus Lerdorf为了创建他的在线简历而创造了&amp;quot;个人主页工具&amp;quot;（Personal Home Page Tools）。这是一种非常简单的语言。其后越来越多的人们注意到了这种语言并对其扩展提出了各种建议。在许多人的无私奉献下以及这种语言本身的源代码自由性质，它演变成为一种特点丰富的语言，而且现在还在成长中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP虽然很容易学习，但是速度上比mod_perl（植入web服务器的perl模块）慢。现在有了可以与mod_perl速度想媲美的被称作Zend的新引擎，而PHP4就可以充分利用这个引擎。PHP4还处在BETA测试阶段。Andy Gutmans和Zeev Suraki是Zend的主要作者。可以去Zend站点(http://www.zend.com)了解更多。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP的应用在个人性质的web工程中增长显著。根据Netcraft在1999年10月的报告，有931122个域和321128个IP地址利用PHP技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;1.2 PHP的先进之处&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;应用PHP有许多好处。当然已知的不利之处在于PHP由于是开放源码项目，没有什么商业支持，并且由此而带来的执行速度缓慢（直到PHP4之前）。但是PHP的邮件列表很是有用而且除非你正在运行像Yahoo!或者Amazon.com这样的极受欢迎的站点，你不会感觉出PHP的速度与其他的有什么不同。最起码我就没有感觉出来！好了，让我们来看看PHP有那些优点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;- 学习过程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;我个人更喜欢PHP的非常简单的学习过程。与Java和Perl不同,你不必把头埋进100多页的文档中努力学习才可以写出一个象样的程序。只要了解一些基本的语法和语言特色，你就可以开始你的PHP编码之旅了。之后你在编码过程中如果遇到了什么麻烦，还可以再去翻阅相关文档。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP的语法与C，Perl，ASP或者JSP。对于那些对上述之一的语言较熟悉的人来说，PHP太简单了。相反的，如果你对PHP了解较多，那么你对于其他几种语言的学习都很简单了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;你只需要30分钟就可以将PHP的核心语言特点全部掌握，你可能已经非常了解HTML，甚至你已经知道怎样用编辑设计软件或者手工来制作好看的WEB站点。由于PHP代码能够无障碍的添加进你的站点，在你设计和维护站点的同时，你可以很轻松的加入PHP使得你的站点更加具有动态特性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;- 数据库连接&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP可以编译成具有与许多数据库相连接的函数。PHP与MySQL是现在绝佳的组合。你还可以自己编写外围的函数取间接存取数据库。通过这样的途径当你更换使用的数据库时，可以轻松的更改编码以适应这样的变化。PHPLIB就是最常用的可以提供一般事务需要的一系列基库。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;- 可扩展性&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;就像前面说的那样，PHP已经进入了一个高速发展的时期。对于一个非程序员来说为PHP扩展附加功能可能会比较难，但是对于一个PHP程序员来说并不困难。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;- 面向对象编程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP提供了类和对象。基于web的编程工作非常需要面向对象编程能力。PHP支持构造器、提取类等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;- 可伸缩性&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;传统上网页的交互作用是通过CGI来实现的。CGI程序的伸缩性不很理想，因为它为每一个正在运行的CGI程序开一个独立进程。解决方法就是将经常用来编写CGI程序的语言的解释器编译进你的web服务器(比如mod_perl,JSP)。PHP就可以以这种方式安装，虽然很少有人愿意这样以CGI方式安装它。内嵌的PHP可以具有更高的可伸缩性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;- 更多特点&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP的开发者们为了更适合web编程，开发了许多外围的流行基库，这些库包含了更易用的层。你可以利用PHP连接包括Oracle，MS-Access，Mysql在内的大部分数据库。你可以在苍蝇上画图，编写程序下载或者显示e-mail。你甚至可以完成网络相关的功能。最好的是，你可以选择你的PHP安装版本需要哪些功能。引用Nissan的Xterra的话来说就是PHP可以做到你想让它做到的一切而且无所不能!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;1.3 竞争对手：ASP,mod_perl,JSP&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;我当然不清楚ASP/JSP能做些什么。不过明确的是编写那样的代码有多简单，购买它们会有多昂贵以及它们需要多么昂贵和强大的硬件。如果你有什么中立的观点（比如说没有被SUN和Microsoft的百万美金所影响），请顺便通知我。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;据我所知，JSP基于Java，因此Java程序员可以轻松开始编码。ASP只是一个一般的引擎，具有支持多种语言的能力，不过默认的并且是最常用的还是VBScript。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;mod_perl与Perl一样强大，只是更快一些。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'php的简单介绍', 1463987078, 4, 0, 674);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `summary`, `time`, `cid`, `del`, `click`) VALUES
(9, 'PHP字符串', '&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP 字符串&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;字符串&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;一个字符串 就是由一系列的字符组成，因此，一个字符就是一个字节。这就是说，一个字节只能有256种不同的变化，这也暗示了PHP无 法原生支持Unicode 。 更多信息可参考函数 utf8_encode()和 utf8_decode()。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note: 一个很长的字符串是没有问题的，PHP对于字符串; 而对字符串长度的限制只和运行PHP程序的该台计 算机的内存大小有关。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;语法&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;一个字符串 通过下面的4种方法来定义：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;单引号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;双引号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;heredoc 语法结构&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;nowdoc 语法结构 (自PHP 5.3.0以后)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;单引号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;定义一个字符串 的最简单的方法是用单引号把它包围起来 (标点符号 &amp;#39;)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;如果想要输出一个单引号，需在它的前面加个反斜线 ()。在单引号前或在字符串的结尾处 想要输出反斜线，输入两条 (\\)。注意，如果在任何其它的字符前加了反斜线，反斜线将会被直接输出。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note: 不像双引号 和heredoc语法结构， 在单引号字符串中的变量 和特殊含义的字符将 不会 被替换。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;#39;this is a simple string&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 可以录入多行&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;#39;You can also have embedded newlines in&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;strings this way as it is&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;okay to do&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 输出： Arnold once said: &amp;quot;I&amp;#39;ll be back&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;#39;Arnold once said: &amp;quot;I&amp;#39;ll be back&amp;quot;&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 输出： You deleted C:*.*?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;#39;You deleted C:\\*.*?&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 输出： You deleted C:*.*?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;#39;You deleted C:*.*?&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 输出： This will not expand: &amp;nbsp; a newline&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;#39;This will not expand: &amp;nbsp; a newline&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 输出： Variables do not $expand $either&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;#39;Variables do not $expand $either&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;双引号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;如果字符串是包围在双引号(&amp;quot;)中， PHP将对一些特殊的字符进行解析：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Escaped characters&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Sequence&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;Meaning&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;换行 (LF or 0x0A (10) in ASCII)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;回车 (CR or 0x0D (13) in ASCII)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;水平方向的 tab(HT or 0x09 (9) in ASCII)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;v&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;竖直方向的 tab (VT or 0x0B (11) in ASCII) (since PHP 5.2.5)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;f&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;换页 (FF or 0x0C (12) in ASCII) (since PHP 5.2.5)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;\\&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;反斜线&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;美金dollar标记&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;quot;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;双引号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;[0-7]{1,3}&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;符合该表达式顺序的字符串是一个八进制的字符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;x[0-9A-Fa-f]{1,2}&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;符合该表达式顺序的字符串是一个十六进制的字符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;和单引号 字符串一样， 如果输出上述之外的字符，反斜线会被打印出来。 PHP5.1.1以 前，{$var} 中的反斜线还不会被显示出来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;用双引号定义的 字符串最重要的特征是变量会被进行，更多信息见字符串解析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Heredoc结构&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;第三种定义字符串的方法是用heredoc句法结构：&amp;lt;&amp;lt;&amp;lt;。在该提示 符后面，要定义个标识符，然后是一个新行。接下来是字符串 本身，最后要用前面定义的标识符作为结束标志。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;结束时所引用的标识符必须在一行的开始位置， 而且，标识符的命名也要像其它标签一样遵守PHP的规则：只能包含 字母、数字和下划线，并且不能用数字和下划线作为开头。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Warning&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;要注意的是结束标识符这行除了 可能有一个分号(;)外，绝对不能包括 其它字符。这意味着标识符不能缩进，分号的前后也不能有任何空白或tabs。更重要的是结束标识符的前面必须是个被本地 操作系统认可的新行标签，比如在UNIX和Mac OS X系统中是 ，而结束标识符（可能有个分号）的后面也必须跟个 新行标签。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;如果不遵守该规则导致结束标签不“干净”，PHP将认为它不是结束标识符而继续寻找。如果在文件结束前也没有找到一个正确的结束标识符，PHP将会在最后一 行产生一个句法错误。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Heredocs结构不能用来初始化class，而从PHP 5.3以后，则该限制只能用在包含变量的情况下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example #1 非法的示例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;class foo {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; public $bar = &amp;lt;&amp;lt;&amp;lt;EOT&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;bar&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;EOT;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Heredoc结构就象是没有使用双引号的双引号字符串， 这就是说在heredoc结构中引号不用被替换，但是上文中列出的字符 ( 等)也可使用。 变量将被替换，但在heredoc结构中字符串表达复杂变量时，要格外小 心。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example #2 Heredoc结构的字符串示例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$str = &amp;lt;&amp;lt;&amp;lt;EOD&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example of string&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;spanning multiple lines&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;using heredoc syntax.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;EOD;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;/* 含有变量的更复杂示例 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;class foo&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; var $foo;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; var $bar;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; function foo()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $this-&amp;gt;foo = &amp;#39;Foo&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $this-&amp;gt;bar = array(&amp;#39;Bar1&amp;#39;, &amp;#39;Bar2&amp;#39;, &amp;#39;Bar3&amp;#39;);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = new foo();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$name = &amp;#39;MyName&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;lt;&amp;lt;&amp;lt;EOT&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;My name is &amp;quot;$name&amp;quot;. I am printing some $foo-&amp;gt;foo.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Now, I am printing some {$foo-&amp;gt;bar[1]}.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;This should print a capital &amp;#39;A&amp;#39;: x41&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;EOT;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;以上例程会输出：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp;My name is &amp;quot;MyName&amp;quot;. I am printing some Foo.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Now, I am printing some Bar2.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;This should print a capital &amp;#39;A&amp;#39;: A&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;也可以把Heredoc结构用在函数参数中来传输数据：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example #3 Heredoc结构在参数中的示例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;var_dump(array(&amp;lt;&amp;lt;&amp;lt;EOD&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;foobar!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;EOD&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;));&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;在PHP 5.3.0以后，也可以用Heredoc结构来初始化静态变量和类的属性和常量：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example #4 使用Heredoc结构来初始化静态值&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 静态变量&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;function foo()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; static $bar = &amp;lt;&amp;lt;&amp;lt;LABEL&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Nothing in here...&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;LABEL;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 类的常量、属性&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;class foo&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; const BAR = &amp;lt;&amp;lt;&amp;lt;FOOBAR&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Constant example&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;FOOBAR;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; public $baz = &amp;lt;&amp;lt;&amp;lt;FOOBAR&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Property example&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;FOOBAR;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;在PHP 5.3.0中还在Heredoc结构中用双引号来声明标志符：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example #5 在heredoc结构中使用双引号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;lt;&amp;lt;&amp;lt;&amp;quot;FOOBAR&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Hello World!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;FOOBAR;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;PHP4才引入了Heredoc结构。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Nowdoc结构&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;就象heredoc结构类似于双引号字符串，Nowdoc结构是类似于单引号字符串的。Nowdoc结构很象heredoc结构，但是 nowdoc不进行解析操作 。 这种结构很适合用在不需要进行转义的PHP代码和其它大段文本。与SGML的 &amp;lt;![CDATA[ ]]&amp;gt; 结构是用来声明大段的不用解析的文本类似，nowdoc结构也有相同的特征。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;一个nowdoc结构也用和heredocs结构一样的标记 &amp;lt;&amp;lt;&amp;lt;， 但是跟在后面的标志符要用 单引号括起来，就像&amp;lt;&amp;lt;&amp;lt;&amp;#39;EOT&amp;#39;这样。heredocs结构的所有规则也同样适用于nowdoc结 构，尤其是结束标志符的规则。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example #6 Nowdoc结构字符串示例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$str = &amp;lt;&amp;lt;&amp;lt;&amp;#39;EOD&amp;#39;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example of string&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;spanning multiple lines&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;using nowdoc syntax.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;EOD;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;/* 含有变量的更复杂的示例 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;class foo&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; public $foo;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; public $bar;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; function foo()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $this-&amp;gt;foo = &amp;#39;Foo&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $this-&amp;gt;bar = array(&amp;#39;Bar1&amp;#39;, &amp;#39;Bar2&amp;#39;, &amp;#39;Bar3&amp;#39;);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = new foo();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$name = &amp;#39;MyName&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;lt;&amp;lt;&amp;lt;&amp;#39;EOT&amp;#39;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;My name is &amp;quot;$name&amp;quot;. I am printing some $foo-&amp;gt;foo.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Now, I am printing some {$foo-&amp;gt;bar[1]}.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;This should not print a capital &amp;#39;A&amp;#39;: x41&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;EOT;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;以上例程会输出：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp;My name is &amp;quot;$name&amp;quot;. I am printing some $foo-&amp;gt;foo.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Now, I am printing some {$foo-&amp;gt;bar[1]}.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;This should not print a capital &amp;#39;A&amp;#39;: x41&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;不象 heredocs结构，nowdocs结构可以用在任意的静态数据环境中，最典型的示例是用来初始化类的属性或常量：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example #7 表态数据的示例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;class foo {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; public $bar = &amp;lt;&amp;lt;&amp;lt;&amp;#39;EOT&amp;#39;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;bar&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;EOT;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Nowdoc结构是在PHP 5.3.0中加入的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;变量解析&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;当字符串用双引号或heredoc结构定义时，其中的变 量将会被解析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;这里共有两种语法规则：一种简单 规则，一种复杂规 则。简单的句法规则是最常用和最方便的， 它可以用最少的代码在一个字符串中加入变量， 数组 值，或 对象属性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;复杂的句法规则是在PHP4以后加入的，被花括号包围的表达式是其明显标记。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;简单句法规则&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;当PHP解析器遇到一个美元符号 ($) ， 它会和其它很多解析器一样，去尽量形成一个合法的变量名。可以用花括 号来明确变量名的界线。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$beer = &amp;#39;Heineken&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;$beer&amp;#39;s taste is great&amp;quot;; //有效；单引号&amp;quot;&amp;#39;&amp;quot;是非法的变量名组成元素&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;He drank some $beers&amp;quot;; //无效;字母s是有效的变量名组成元素，但是这里的变量是$beer&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;He drank some ${beer}s&amp;quot;; // 有效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;He drank some {$beer}s&amp;quot;; // 有效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;类似的，一个 数组 索引或一个 对象 属性也可被解析。数组索引要用方括号 (]) 来表示边际， 对象属性则是和上述的变量规则相同。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 下面的例子是在字符串中引用数组&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 当数组处于字符串外部时，要把数组的值用括号括起来且不要用花括号{ }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 显示所有错误&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;error_reporting(E_ALL);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$fruits = array(&amp;#39;strawberry&amp;#39; =&amp;gt; &amp;#39;red&amp;#39;, &amp;#39;banana&amp;#39; =&amp;gt; &amp;#39;yellow&amp;#39;);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效；但是注意在字符串外面不能这样引用数组&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;A banana is $fruits[banana].&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;A banana is {$fruits[&amp;#39;banana&amp;#39;]}.&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效，但是PHP会先寻找常量banana&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;A banana is {$fruits[banana]}.&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 无效，要用花括号，这里将会产生一个解析错误&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;A banana is $fruits[&amp;#39;banana&amp;#39;].&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;A banana is &amp;quot; . $fruits[&amp;#39;banana&amp;#39;] . &amp;quot;.&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This square is $square-&amp;gt;width meters broad.&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 无效，解决方法见复杂结构&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This square is $square-&amp;gt;width00 centimeters broad.&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;如果想要表达更复杂的结构，请用复杂句法规则。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;复杂句法规则&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;复杂句法规则不是结构复杂而命名，而是因为它可以使用复杂的表达式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;任何想用在字符串中标量变量，数组变量或对象属性都可使用这种方法。 只需简单地像在字符串以外的地方那样写出表达式， 然后用花括号{和 }把它括起来。 由于 { 无法被转义，只有 $ 要紧挨着 {才会被认出来，可以用 {$ 来表达 {$。下面的示例可以更好的解释：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 显示所有错误&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;error_reporting(E_ALL);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$great = &amp;#39;fantastic&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 无效，输出:?This?is?{?fantastic}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This is { $great}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效，输出： This is fantastic&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This is {$great}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This is ${great}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This square is {$square-&amp;gt;width}00 centimeters broad.&amp;quot;;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This works: {$arr[4][3]}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 这是错误的表达式，因为就象$foo[bar] 的格式不能在字符串以外的地方使用一样。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 换句话说，只有在PHP能找到常量foo 的前提下才会正常工作；这里会产生一个E_NOTICE?(undefined?constant)级别的错误。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This is wrong: {$arr[foo][3]}&amp;quot;;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效，当在字符串中使用多重数组时，一定要用括号将它括起来&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This works: {$arr[&amp;#39;foo&amp;#39;][3]}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This works: &amp;quot; . $arr[&amp;#39;foo&amp;#39;][3];&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This works too: {$obj-&amp;gt;values[3]-&amp;gt;name}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This is the value of the var named $name: {${$name}}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This is the value of the var named by the return value of getName():&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;{${getName()}}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This is the value of the var named by the return value of&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$object-&amp;gt;getName(): {${$object-&amp;gt;getName()}}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 无效，输出： This is the return value of getName(): {getName()}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;This is the return value of getName(): {getName()}&amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;也可以在字符串中用变量来调用类的属性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;class foo {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; var $bar = &amp;#39;I am bar.&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = new foo();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$bar = &amp;#39;bar&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$baz = array(&amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;, &amp;#39;quux&amp;#39;);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;{$foo-&amp;gt;$bar} &amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;{$foo-&amp;gt;$baz[1]} &amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;以上例程会输出：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;I am bar.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;I am bar.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;函数、行为、类的静态变量和类的常量只有在PHP 5以后才可在 {$} 中使用。然而，只有在用返回的值作为名 称的变量存在的情况下才会进行处理，只单一使用花括号 ({}) 无法处理从函数或行为的返回值或从类的常量或静态变量的返 回值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 显示所有错误&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;error_reporting(E_ALL);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;class beers {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; const softdrink = &amp;#39;rootbeer&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp; &amp;nbsp; public static $ale = &amp;#39;ipa&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$rootbeer = &amp;#39;A &amp;amp; W&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$ipa = &amp;#39;Alexander Keith&amp;#39;s&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 有效，输出： I&amp;#39;d like an A &amp;amp; W&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;I&amp;#39;d like an {${beers::softdrink}} &amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 也有效，输出： I&amp;#39;d like an Alexander Keith&amp;#39;s&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;I&amp;#39;d like an {${beers::$ale}} &amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;存取和修改字符串中的字符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;字符串中的字符可以通过一个以0为开始的，用类似数组结构中的方括号包含对应的数字来查找和修改，比如 $str[42]， 可以把 字符串想像数组 。 函数 substr() 和 substr_replace()可以用来实现多于一个字符 的情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note: 字符串为了同样的目的也可以用花括号，比如 $str{42}，但是， 在 PHP 5.3.0中不推荐使用这种格式，应该用方括号，就像 $str[42]。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Warning&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;方括号中的数字超出范围将会产生空白。非整数类型被转换成整数，非整数类型转变成整数，非法类型会产生一个 E_NOTICE级别错误，负数在写入时会产生一个E_NOTICE，但读 取的是空字符串。被指定的字符串只有第一个字符可用，空字符串用指定为空字节。下面为英文原文： Writing to an out of range offset pads the string with spaces. Non-integer types are converted to integer. Illegal offset type emits E_NOTICE. Negative offset emits E_NOTICE in write but reads empty string. Only the first character of an assigned string is used. Assigning empty string assigns NUL byte.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Example #8 Some string examples&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 取得字符串的第一个字符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$str = &amp;#39;This is a test.&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$first = $str[0];&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 取得字符串的第三个字符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$third = $str[2];&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 取得字符串的最后一个字符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$str = &amp;#39;This is still a test.&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$last = $str[strlen($str)-1];&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;// 修改字符串的最后一个字符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$str = &amp;#39;Look at the sea&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$str[strlen($str)-1] = &amp;#39;e&amp;#39;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;用 [] 或 {} 存取其它类型的变量只会返回 NULL.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;有用的函数和操作符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;字符串可以用&amp;#39;.&amp;#39; (点) 操作符连接起来， 注意 &amp;#39;+&amp;#39; (加号) 操作符 没有 这个功能。 更多信息参考 字符串操作符 。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;对于字符串 的操作有很多有用的函数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;可以参考 字符串函数 了解大部分函数， 高级的查找&amp;amp;替换功能可以参考 正则表达式函数 或 Perl类型的正则 表达式函数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;另外还有URL字符串的函数， 也有加密/解密字符串的函数。 (mcrypt 和 mhash).&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;最后，可以参考 字符类型函数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;转换成字符串&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;一个值可以通过在其前面加上(string)或用strval()函数来转变成 字符串。 在一个需要字符串的表达式中，字符串会自动转变，比如在使用函数 echo() 或 print() 时， 或在一个变量和一个 字符串 进行比较时，就会发生这种转变 类型 和 类型转换 可以更好的解释下面的事情，也可参考函 数 settype() 。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;一个boolean TRUE 值被转换成 字符串&amp;quot;1&amp;quot;。 Boolean FALSE 被转换成&amp;quot;&amp;quot; (空的字符串)。 这种转变可以在 boolean 和 字符串 之间往返进行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;一个 整数 或 浮点数 被转变为数字的字面样式的字符串 (包括 浮点数中的指数部分)，使用指数计数法的浮点数 (4.1E+6)也可转变。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Note:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;在脚本场所(category LC_NUMERIC)定义了小数点，更多可以参考函数 setlocale()。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;数组转换成 字符串 &amp;quot;Array&amp;quot;，因此， echo() 和 print() c无法显示出该数组的值。如果显示一个数组值，可以用 echo $arr[&amp;#39;foo&amp;#39;]这种结构，更多内容见下文。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;在PHP 4中对象被转换成 字符串 &amp;quot;Object&amp;quot;， 果为了调试原因需要打印出对象的值，方法见正文。为了得到对象的类的名称，可以用 get_class() 函数。 在PHP5中， 可以用 __toString 。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;资源总会被转变成&amp;quot;Resource id #1&amp;quot;这种结构的 字符串 ， 其中的 1 是PHP分配给该资源的独特数字。不用过多关注这种结构，它马上要转变了。为了得到一个 resource类型，可以用函数 get_resource_type()。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;NULL 总是被转变成空的字符串。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;如上面所说的，直接把数组， 对象或 资源 转换成 字符串 不会得到超出其自身的更多信息。可以使用函数 print_r() 和 var_dump() 列出这些类型的内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;大部分的PHP值可以转变成 字符串s 来长期储存，这被称作串行化，可以用函数 serialize() 来实现。 如果PHP引擎设定支持 WDDX ， PHP值也可储存成XML格式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;字符串转变成数字&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;当一个字符串 被用在了一个数字的环境中，结果和类型如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;如果字符串 没有包含 &amp;#39;.&amp;#39;，&amp;#39;e&amp;#39;或&amp;#39;E&amp;#39; 并且数字值符合整数类型的限定 ( PHP_INT_MAX定义的)， 这个 字符串 可被认定是一个 integer， 在其它情况下被认定为一个float。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;字符串的开始部分给定了它的值，如果 字符串 以合法的数字开始，这个数字可直接使用。 否则，值就 是 0 (零)。 合法数值由符号，后面跟着一个或多个数字（可能有个小数点），再跟着可选的指数符号如&amp;#39;e&amp;#39; 或 &amp;#39;E&amp;#39;，后面跟着一个或多个数字。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = 1 + &amp;quot;10.5&amp;quot;; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// $foo is float (11.5)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = 1 + &amp;quot;-1.3e3&amp;quot;; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// $foo is float (-1299)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = 1 + &amp;quot;bob-1.3e3&amp;quot;; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // $foo is integer (1)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = 1 + &amp;quot;bob3&amp;quot;; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// $foo is integer (1)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = 1 + &amp;quot;10 Small Pigs&amp;quot;; &amp;nbsp; &amp;nbsp; &amp;nbsp; // $foo is integer (11)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = 4 + &amp;quot;10.2 Little Piggies&amp;quot;; // $foo is float (14.2)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = &amp;quot;10.0 pigs &amp;quot; + 1; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// $foo is float (11)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;$foo = &amp;quot;10.0 pigs &amp;quot; + 1.0; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// $foo is float (11) &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;更多信息可以参考Unix手册中的strtod(3)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;本节中的示例可以通过复制/粘贴到下面的代码中来显示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;echo &amp;quot;$foo==$foo; type is &amp;quot; . gettype ($foo) . &amp;quot;&amp;lt;br /&amp;gt; &amp;quot;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;不要想像在C语言中的那样，通过一个整数转换得到相应字符，使用函数 ord() 和 chr() 实现ASCII码和字符间的转换。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'php中的字符串介绍', 1463987152, 22, 0, 35);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `summary`, `time`, `cid`, `del`, `click`) VALUES
(10, 'MySQL简介', '&lt;p&gt;1.MySQL的概述&lt;/p&gt;&lt;p&gt;　MySQL是一个小型关系型数据库管理系统，开发者为瑞典MySQL AB公司。在2008年1月16号被Sun公司收购。而2009年,SUN又被Oracle收购.对于Mysql的前途,没有任何人抱乐观的态度.目前MySQL被广泛地应用在Internet上的中小型网站中。由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，许多中小型网站为了降低网站总体拥有成本而选择了MySQL作为网站数据库。MySQL的官方网站的网址是：www.mysql.com&lt;/p&gt;&lt;p&gt;2.MySQL的特性&lt;/p&gt;&lt;p&gt;1) 使用C和C++编写，并使用了多种编译器进行测试，保证源代码的可移植性 　　2) 支持AIX、FreeBSD、HP-UX、Linux、Mac OS、Novell Netware、OpenBSD、OS/2 Wrap、Solaris、Windows等多种操作系统 　　&lt;/p&gt;&lt;p&gt;3) 为多种编程语言提供了API。这些编程语言包括C、C++、Python、Java、Perl、PHP、Eiffel、Ruby和Tcl等。 　　&lt;/p&gt;&lt;p&gt;4) 支持多线程，充分利用CPU资源 　　&lt;/p&gt;&lt;p&gt;5) 优化的SQL查询算法，有效地提高查询速度 　　&lt;/p&gt;&lt;p&gt;6) 既能够作为一个单独的应用程序应用在客户端服务器网络环境中，也能够作为一个库而嵌入到其他的软件中提供多语言支持，常见的编码如中文的GB 2312、BIG5，日文的Shift_JIS等都可以用作数据表名和数据列名 　　&lt;/p&gt;&lt;p&gt;7) 提供TCP/IP、ODBC和JDBC等多种数据库连接途径 　　&lt;/p&gt;&lt;p&gt;8) 提供用于管理、检查、优化数据库操作的管理工具 　　&lt;/p&gt;&lt;p&gt;9) 可以处理拥有上千万条记录的大型数据库&lt;/p&gt;&lt;p&gt;3.MySQL的应用&lt;/p&gt;&lt;p&gt;与其他的大型数据库例如Oracle、DB2、SQL Server等相比，MySQL自有它的不足之处，如规模小、功能有限（MySQL Cluster的功能和效率都相对比较差）等，但是这丝毫也没有减少它受欢迎的程度。对于一般的个人使用者和中小型企业来说，MySQL提供的功能已经绰绰有余，而且由于MySQL是开放源码软件，因此可以大大降低总体拥有成本。 目前Internet上流行的网站构架方式是LAMP（Linux+Apache+MySQL+PHP），即使用Linux作为操作系统，Apache作为Web服务器，MySQL作为数据库，PHP作为服务器端脚本解释器。由于这四个软件都是自由或开放源码软件（FLOSS)，因此使用这种方式不用花一分钱就可以建立起一个稳定、免费的网站系统。&lt;/p&gt;&lt;p&gt;4.MySQL管理&lt;/p&gt;&lt;p&gt;可以使用命令行工具管理MySQL数据库（命令mysql 和 mysqladmin)，也可以从MySQL的网站下载图形管理工具MySQL Administrator和MySQL Query Browser。 　　&lt;/p&gt;&lt;p&gt;phpMyAdmin是由php写成的MySQL资料库系统管理程式，让管理者可用Web界面管理MySQL资料库。 　　&lt;/p&gt;&lt;p&gt;phpMyBackupPro也是由PHP写成的，可以透过Web介面创建和管理数据库。它可以创建伪cronjobs，可以用来自动在某个时间或周期备份MySQL 数据库。 　　另外，还有其他的GUI管理工具，例如早先的mysql-front 以及 ems mysql manager,navicat 等等。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'mysql的简单介绍', 1464072236, 5, 0, 56),
(11, 'Linux简介', '&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Linux 简介:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Linux是一个自由的，免费的，源码开放的操作系统。也是开源软件中最著名的例子。其最主要的目的就是为了建立不受任何商品化软件版权制约的，全世界都能使用的类Unix兼容产品.而我们将服务器部署在Linux将会更加的稳定、安全、高效以及出色的性能这时windows无法比的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;注：UNIX，是一个强大的多用户、多任务操作系统，支持多种处理器架构，是商业软件，最早由KenThompson、DennisRitchie和DouglasMcIlroy于1969年在AT&amp;amp;T的贝尔实验室开发。经过长期的发展和完善，目前已成长为一种主流的操作系统技术和基于这种技术的产品大家族。由于UNIX具有技术成熟、可靠性高、网络和数据库功能强、伸缩性突出和开放性好等特色，可满足各行各业的实际需要，特别能满足企业重要业务的需要，已经成为主要的工作站平台和重要的企业操作平台。曾经是服务器操作系统的首选，占据最大市场份额，但最近在跟WINDOWSSERVER以及Linux的竞争中有所失利。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Linux的产生:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Linux最初是由芬兰赫尔辛基大学学生Linus Torvalds由于自己不满意教学中使用的MINIX操作系统，所以在1990年底由于个人爱好设计出了LINUX系统核心。后来发布于芬兰最大的ftp服务器上，用户可以免费下载，所以它的周边的程序越来越多，Linux本身也逐渐发展壮大起来，之后Linux在不到三年的时间里成为了一个功能完善，稳定可靠的操作系统. 赫尔辛基没有想过Linux发展到今天会变得这么大,他说当初他写Linux只是当作一个短期的项目，并随时准备用更好的来替代的。他认为一定会有其他人做出更强大更专业的内核来。同时，当时他只是将Linux当做自己的一个小爱好而已。Linus认为开源软件是一个了解世界编程情况的好方法。开源不像课堂项目，一个活跃的项目需要与人交流共同来解决问题。一些公司需要技术人才，常常会在开源社区中找那些活跃分子。所以参与到开源项目中来，也是一个向全世界推销自己的好方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Linux的特点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;开放性，多用户，多任务，丰富的网络功能，可靠的系统安全，良好的可移植性，具有标准兼容性，良好的用户界面（命令界面，图形界面等），出色的速度性能&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Linux的组成：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;内核：是系统的心脏，是运行程序和管理像磁盘和打印机等硬件设备的核心程序。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Shell：是系统的用户界面，提供了用户和内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行，是一个命令解释器。但它不仅使命令解释器，而且还是高级编程语言，shell编程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;文件系统：文件系统是文件存放在磁盘等存储设备上的组织方法，Linux支持多种文件系统，如ext3,ext2,NFS,SMB,iso9660等&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;应用程序：标准的Linux操作系统都会有一套应用程序例如X-Window,Open Office等&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Linux版本：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;发行版本：是一些厂商将Linux系统内核与应用软件和文档包装起来，并提供一些安装界面和系统设定管理工具的一个软件包的集合，例如RedHat，Debian，Ubuntu, Novell/SuSE 等。Ubuntu版本号由该次发布的年份和月份组成，半年发布一次.首次发布是在2004年10月，因此该版本为4.10。于2009年4月23日发布，因此版本号为9.04。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;RedHat：更多的应用于服务器&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Ubuntu：更多应用于个人桌面&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;Linux发展与未来：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'linux的简单介绍', 1463987251, 6, 0, 347),
(12, 'DIV+CSS', '&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;DIV+CSS是WEB设计标准，它是一种网页的布局方法。与传统中通过表格（table）布局定位的方式不同，它可以实现网页页面内容与表现相分离。提起&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;DIV+CSS&lt;/a&gt;组合，还要从XHTML说起。&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;XHTML&lt;/a&gt;是一种在&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;HTML&lt;/a&gt;（&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;标准通用标记语言&lt;/a&gt;的子集）基础上优化和改进的新语言，目的是基于XML应用与强大的数据转换能力，适应未来网络应用更多的需求。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;“DIV+CSS”其实是错误的叫法，而标准的叫法应是XHTML+CSS。因为DIV与Table都是XHTML或HTML语言中的一个标记，而CSS只是一种表现形式。也许其提出者本意并没有错，但是跟风者从表现曲解了其意思，认为整个页面就应当是DIV+CSS文件的组合。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;div style=&quot;POSITION: relative; BORDER-LEFT: rgb(79,156,238) 12px solid; WIDOWS: 1; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 35px 0px 15px -30px; ZOOM: 1; DISPLAY: block; FONT: 22px/24px &amp;#39;Microsoft YaHei&amp;#39;, SimHei, Verdana; WHITE-SPACE: normal; BACKGROUND: url(http://baike.bdimg.com/static/wiki-lemma/normal/resource/img/paraTitle-line_c5e6d61.png) rgb(255,255,255); LETTER-SPACING: normal; COLOR: rgb(51,51,51); CLEAR: both; OVERFLOW: hidden; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para-title level-2&quot;&gt;&lt;h2 style=&quot;PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; MARGIN: 0px; PADDING-LEFT: 18px; PADDING-RIGHT: 8px; DISPLAY: block; BACKGROUND: rgb(255,255,255); FLOAT: left; COLOR: rgb(0,0,0); FONT-SIZE: 22px; FONT-WEIGHT: 400; PADDING-TOP: 0px&quot; class=&quot;title-text&quot;&gt;方法&lt;/h2&gt;&lt;a style=&quot;LINE-HEIGHT: 22px; PADDING-LEFT: 24px; DISPLAY: block; FONT-FAMILY: SimSun; BACKGROUND: rgb(255,255,255); FLOAT: right; HEIGHT: 22px; COLOR: rgb(136,136,136); FONT-SIZE: 12px; TEXT-DECORATION: none&quot; class=&quot;edit-icon j-edit-link&quot; href=&quot;http://&quot; data-edit-dl=&quot;1&quot;&gt;&lt;em style=&quot;LINE-HEIGHT: 1; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; MARGIN: 0px 3px 0px 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: 0px; FONT-FAMILY: baikeFont_layout; COLOR: rgb(170,170,170); VERTICAL-ALIGN: text-bottom; FONT-WEIGHT: 400; TEXT-DECORATION: none; -webkit-font-smoothing: antialiased; speak: none&quot; class=&quot;cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma&quot;&gt;&lt;/em&gt;编辑&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;css是层叠样式表（Cascading Style Sheets）的缩写，用于定义HTML元素的显示形式，是&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;W3C&lt;/a&gt;推出的格式化&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;网页&lt;/a&gt;内容的标准技术。网页设计者必须掌握的技术之一。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;在&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;HTML&lt;/a&gt;文档中加入CSS&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;样式表可分为嵌入式样式表、&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;外部样式表&lt;/a&gt;和内联样式表三种，在同一文档内可以同时使用三种方法。&lt;/div&gt;&lt;div style=&quot;POSITION: relative; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 12px/15.65px arial, 宋体, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;anchor-list&quot;&gt;&lt;a style=&quot;POSITION: absolute; COLOR: rgb(19,110,194); TOP: -50px; TEXT-DECORATION: none&quot; class=&quot;lemma-anchor para-title&quot; name=&quot;2&quot; href=&quot;http://&quot;&gt;&lt;/a&gt;&lt;a style=&quot;POSITION: absolute; COLOR: rgb(19,110,194); TOP: -50px; TEXT-DECORATION: none&quot; class=&quot;lemma-anchor &quot; name=&quot;sub939547_2&quot; href=&quot;http://&quot;&gt;&lt;/a&gt;&lt;a style=&quot;POSITION: absolute; COLOR: rgb(19,110,194); TOP: -50px; TEXT-DECORATION: none&quot; class=&quot;lemma-anchor &quot; name=&quot;发展&quot; href=&quot;http://&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;POSITION: relative; BORDER-LEFT: rgb(79,156,238) 12px solid; WIDOWS: 1; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 35px 0px 15px -30px; ZOOM: 1; DISPLAY: block; FONT: 22px/24px &amp;#39;Microsoft YaHei&amp;#39;, SimHei, Verdana; WHITE-SPACE: normal; BACKGROUND: url(http://baike.bdimg.com/static/wiki-lemma/normal/resource/img/paraTitle-line_c5e6d61.png) rgb(255,255,255); LETTER-SPACING: normal; COLOR: rgb(51,51,51); CLEAR: both; OVERFLOW: hidden; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para-title level-2&quot;&gt;&lt;h2 style=&quot;PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; MARGIN: 0px; PADDING-LEFT: 18px; PADDING-RIGHT: 8px; DISPLAY: block; BACKGROUND: rgb(255,255,255); FLOAT: left; COLOR: rgb(0,0,0); FONT-SIZE: 22px; FONT-WEIGHT: 400; PADDING-TOP: 0px&quot; class=&quot;title-text&quot;&gt;发展&lt;/h2&gt;&lt;a style=&quot;LINE-HEIGHT: 22px; PADDING-LEFT: 24px; DISPLAY: block; FONT-FAMILY: SimSun; BACKGROUND: rgb(255,255,255); FLOAT: right; HEIGHT: 22px; COLOR: rgb(136,136,136); FONT-SIZE: 12px; TEXT-DECORATION: none&quot; class=&quot;edit-icon j-edit-link&quot; href=&quot;http://&quot; data-edit-dl=&quot;2&quot;&gt;&lt;em style=&quot;LINE-HEIGHT: 1; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; MARGIN: 0px 3px 0px 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: 0px; FONT-FAMILY: baikeFont_layout; COLOR: rgb(170,170,170); VERTICAL-ALIGN: text-bottom; FONT-WEIGHT: 400; TEXT-DECORATION: none; -webkit-font-smoothing: antialiased; speak: none&quot; class=&quot;cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma&quot;&gt;&lt;/em&gt;编辑&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;1.样式定义放在一个单独的文件中，例：新建一个后辍为CSS的样式定义。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;元素{ 属性color:值red；} 在head段使用&amp;lt;link&amp;gt;标记，&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;引用语法：&amp;lt;link rel=”stylesheet” type=”text/css” href=”样式表URL” /&amp;gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;2.嵌入式样式表：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&amp;lt;style&amp;gt;元素段必须出现在head段内，有一个开始和结束标记，并且可以有多个&amp;lt;style&amp;gt;段&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;语法格式： &amp;lt;style type=”text/css”&amp;gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;…样式定义…&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;样式&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;3.在嵌入式样式表中我们可以使用@&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;import&lt;/a&gt;导入一个外部样式表，例：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&amp;lt;style type=”text/css”&amp;gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;@import url(外部样式表位置)；&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;…其它嵌入式的样式定义…&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&amp;lt;/style&amp;gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;4.内联样式表：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;写在开始标记里面，比如你要H1变红色，&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&amp;lt;h1 style=”color:red;”&amp;gt;变为红色&amp;lt;/h1&amp;gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;总结： 三种样式表优先使用外部样式表、嵌入式样式表用来调试用的、一般不使用内联样式表。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;5.样式规则：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;一个样式规则由一个选择器后跟一个声明块组成，声明块是一个大容器,由&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;大括号&lt;/a&gt;中间的部分组成,声明块中间的空间会被忽略,,声明块由一个一个的声明组成,声明由属性和值组成,属性和值用冒号隔开,分号结束，每个声明内只能有一个属性，如果属性值中含有空格用双引号括起来例，在一个声明块内可以有多个声明，每个声明用分号隔开。&lt;/div&gt;&lt;table style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 5px 0px; BORDER-SPACING: 0px; BORDER-COLLAPSE: collapse; FONT: 12px/22px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-BREAK: break-all; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;table-view log-set-param&quot; log-set-param=&quot;table_view&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(230,230,230) 1px solid; BORDER-LEFT: rgb(230,230,230) 1px solid; PADDING-BOTTOM: 2px; LINE-HEIGHT: 22px; MARGIN: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 22px; FONT-SIZE: 12px; BORDER-TOP: rgb(230,230,230) 1px solid; BORDER-RIGHT: rgb(230,230,230) 1px solid; PADDING-TOP: 2px&quot; valign=&quot;top&quot; width=&quot;142&quot; align=&quot;left&quot;&gt;&lt;div style=&quot;LINE-HEIGHT: 24px; TEXT-INDENT: 0px; MARGIN: 0px; ZOOM: 1; WORD-WRAP: break-word; HEIGHT: auto; COLOR: rgb(51,51,51); FONT-SIZE: 12px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;选择器&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(230,230,230) 1px solid; BORDER-LEFT: rgb(230,230,230) 1px solid; PADDING-BOTTOM: 2px; LINE-HEIGHT: 22px; MARGIN: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 22px; FONT-SIZE: 12px; BORDER-TOP: rgb(230,230,230) 1px solid; BORDER-RIGHT: rgb(230,230,230) 1px solid; PADDING-TOP: 2px&quot; valign=&quot;top&quot; width=&quot;142&quot; align=&quot;left&quot;&gt;&lt;div style=&quot;LINE-HEIGHT: 24px; TEXT-INDENT: 0px; MARGIN: 0px; ZOOM: 1; WORD-WRAP: break-word; HEIGHT: auto; COLOR: rgb(51,51,51); FONT-SIZE: 12px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;声明块&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(230,230,230) 1px solid; BORDER-LEFT: rgb(230,230,230) 1px solid; PADDING-BOTTOM: 2px; LINE-HEIGHT: 22px; MARGIN: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 22px; FONT-SIZE: 12px; BORDER-TOP: rgb(230,230,230) 1px solid; BORDER-RIGHT: rgb(230,230,230) 1px solid; PADDING-TOP: 2px&quot; height=&quot;0&quot; valign=&quot;top&quot; rowspan=&quot;3&quot; width=&quot;142&quot; align=&quot;left&quot;&gt;&lt;div style=&quot;LINE-HEIGHT: 24px; TEXT-INDENT: 0px; MARGIN: 0px; ZOOM: 1; WORD-WRAP: break-word; HEIGHT: auto; COLOR: rgb(51,51,51); FONT-SIZE: 12px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;选择一个元素&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(230,230,230) 1px solid; BORDER-LEFT: rgb(230,230,230) 1px solid; PADDING-BOTTOM: 2px; LINE-HEIGHT: 22px; MARGIN: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 22px; FONT-SIZE: 12px; BORDER-TOP: rgb(230,230,230) 1px solid; BORDER-RIGHT: rgb(230,230,230) 1px solid; PADDING-TOP: 2px&quot; valign=&quot;top&quot; width=&quot;142&quot; align=&quot;left&quot;&gt;&lt;div style=&quot;LINE-HEIGHT: 24px; TEXT-INDENT: 0px; MARGIN: 0px; ZOOM: 1; WORD-WRAP: break-word; HEIGHT: auto; COLOR: rgb(51,51,51); FONT-SIZE: 12px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;声明{ }&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(230,230,230) 1px solid; BORDER-LEFT: rgb(230,230,230) 1px solid; PADDING-BOTTOM: 2px; LINE-HEIGHT: 22px; MARGIN: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 22px; FONT-SIZE: 12px; BORDER-TOP: rgb(230,230,230) 1px solid; BORDER-RIGHT: rgb(230,230,230) 1px solid; PADDING-TOP: 2px&quot; valign=&quot;top&quot; width=&quot;142&quot; align=&quot;left&quot;&gt;&lt;div style=&quot;LINE-HEIGHT: 24px; TEXT-INDENT: 0px; MARGIN: 0px; ZOOM: 1; WORD-WRAP: break-word; HEIGHT: auto; COLOR: rgb(51,51,51); FONT-SIZE: 12px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;属性 : 值;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(230,230,230) 1px solid; BORDER-LEFT: rgb(230,230,230) 1px solid; PADDING-BOTTOM: 2px; LINE-HEIGHT: 22px; MARGIN: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 22px; FONT-SIZE: 12px; BORDER-TOP: rgb(230,230,230) 1px solid; BORDER-RIGHT: rgb(230,230,230) 1px solid; PADDING-TOP: 2px&quot; valign=&quot;top&quot; width=&quot;142&quot; align=&quot;left&quot;&gt;&lt;div style=&quot;LINE-HEIGHT: 24px; TEXT-INDENT: 0px; MARGIN: 0px; ZOOM: 1; WORD-WRAP: break-word; HEIGHT: auto; COLOR: rgb(51,51,51); FONT-SIZE: 12px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;冒号开始分号结束&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;6、注释：有关的详细内容在中有详细的解释。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;7、&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;选择器分组&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;当遇到几个选择器共享一个声明的时候，可以分组放在一起，每个选择器必须以逗号隔开。例：h1,h2,h3,h4 { color red;}选择器分组时要将每个选择器路径写全，分组结尾不能有逗号。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;例：路径不全： #maincontent p, ul{ border-top:1pxsolid #ddd;}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;正确写法：#maincontent p, #maincontent ul{ border-top:1pxsolid #ddd;}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;例：结尾多了一个逗号： .a1 p, .a1 ul,{color:red;}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;8、选择器&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;元素选择器：语法格式： 元素{color: blue;}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;类选择器&lt;/a&gt;： 语法格式： .类名{属性: 值;}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;ID选择器：#id名 {属性 : 值；} ID名不能重复&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;通配符&lt;/a&gt;选择器：语法格式：*{属性:值;}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://&quot; target=&quot;_blank&quot;&gt;伪类&lt;/a&gt;选择器：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;伪类选择器可以以不同方式格式化超级链接&amp;lt;a&amp;gt;元素的四种不同状态：以下顺序依次写；（记忆方法：a Love or Hate）&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;a:link 是用在未访问的链接的选择器&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;a:visited 是用在已访问过的链接的选择器&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;a:hover 是用在鼠标光标放在其上的链接的选择器&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;a:active 是用在获得焦点（比如，被点击）的链接的选择器&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;如果需要，我们可以组合这几个状态，按顺序写：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;a:link，a:visited { color :blue;}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;a:hover ，a:active { color :blue;}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;9、伪元素选择器&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;标准的选择器不能格式化一个元素内容的第一个字母或者第一行，而伪元素选择器能实现：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;所有浏览器支持的有两种： ：first-line和 ：first-letter&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;例：段落的第一行：p：first-line {属性：值；}&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;例：段落的第一个字母：p：first-letter {属性：值；}&lt;/div&gt;&lt;/div&gt;', '简单介绍DIV+CSS', 1464089073, 2, 0, 899);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `summary`, `time`, `cid`, `del`, `click`) VALUES
(13, 'HTML5（一）', '&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 20px 0px 12px; ZOOM: 1; FONT: 18px/20px &amp;#39;Microsoft YaHei&amp;#39;, SimHei, Verdana; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); CLEAR: both; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para-title level-3&quot;&gt;&lt;h3 style=&quot;PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: rgb(51,51,51); FONT-SIZE: 18px; FONT-WEIGHT: 400; PADDING-TOP: 0px&quot; class=&quot;title-text&quot;&gt;优点缺点&lt;/h3&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;网络标准&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;HTML5本身是由W3C推荐出来的，它的开发是通过&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/1931.htm&quot; target=&quot;_blank&quot;&gt;谷歌&lt;/a&gt;、苹果，&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/1724.htm&quot; target=&quot;_blank&quot;&gt;诺基亚&lt;/a&gt;、&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/9113.htm&quot; target=&quot;_blank&quot;&gt;中国移动&lt;/a&gt;等几百家公司一起酝酿的技术，这个技术最大的好处在于它是一个公开的技术。换句话说，每一个公开的标准都可以根据&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/7913.htm&quot; target=&quot;_blank&quot;&gt;W3C&lt;/a&gt;的资料库找寻根源。另一方面，W3C通过的HTML5标准也就意味着每一个浏览器或每一个平台都会去实现。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;多设备跨平台&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;用HTML5的优点主要在于，这个技术可以进行跨平台的使用。比如你开发了一款HTML5的游戏，你可以很轻易地移植到UC的开放平台、Opera的游戏中心、&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/409608.htm&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;应用平台，甚至可以通过封装的技术发放到App Store或Google Play上，所以它的跨平台性非常强大，这也是大多数人对HTML5有兴趣的主要原因。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;自适应网页设计&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;很早就有人设想，能不能“一次设计，普遍适用”，让同一张网页自动适应不同大小的屏幕，根据屏幕宽度，自动调整布局（layout）。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;2010年，Ethan Marcotte提出了”自适应网页设计“这个名词，指可以自动识别屏幕宽度、并做出相应调整的网页设计。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;这就解决了传统的一种局面——网站为不同的设备提供不同的网页，比如专门提供一个mobile版本，或者iPhone / iPad版本。这样做固然保证了效果，但是比较麻烦，同时要维护好几个版本，而且如果一个网站有多个portal（入口），会大大增加架构设计的复杂度。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;即时更新&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;游戏客户端每次都要更新，很麻烦。可是更新HTML5游戏就好像更新页面一样，是马上的、即时的更新。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;总结概括HTML5有以下优点：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;1、提高可用性和改进用户的友好体验；&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;2、有几个新的标签，这将有助于开发人员定义重要的内容；&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;3、可以给站点带来更多的多媒体元素(视频和音频)；&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;4、可以很好的替代FLASH和Silverlight；&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;5、当涉及到网站的抓取和索引的时候，对于&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/1047.htm&quot; target=&quot;_blank&quot;&gt;SEO&lt;/a&gt;很友好；&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;6、将被大量应用于移动应用程序和游戏；&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;7、可移植性好。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;缺点&lt;/strong&gt;：&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;该标准并未能很好的被浏览器所支持。因新标签的引入，各浏览器之间将缺少一种统一的数据描述格式，造成用户体验不佳。&lt;/div&gt;&lt;p&gt;&lt;/p&gt;', 'html5优缺点', 1464092696, 1, 0, 234),
(14, 'HTML5（二）', '&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 20px 0px 12px; ZOOM: 1; FONT: 18px/20px &amp;#39;Microsoft YaHei&amp;#39;, SimHei, Verdana; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); CLEAR: both; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para-title level-3&quot;&gt;&lt;h3 style=&quot;PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: rgb(51,51,51); FONT-SIZE: 18px; FONT-WEIGHT: 400; PADDING-TOP: 0px&quot; class=&quot;title-text&quot;&gt;应用须知&lt;/h3&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;它可能会消灭Flash&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;许多业内人士表示，HTML将会最终代替多媒体框架，如&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/7578.htm&quot; target=&quot;_blank&quot;&gt;Adobe&lt;/a&gt;的Flash，但是短期看来还不是时候。HTML5估计到2014年才能逐步成熟，而且将现有应用Flash的网络开发完全转向HTML5还需要一段时间。尽管HTML5提出了许多优点，但是还可能有某些应用更适合于更灵活的框架。一些主流的大公司都逐步转向使用HTML5，&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/1931.htm&quot; target=&quot;_blank&quot;&gt;谷歌&lt;/a&gt;于2015年2月26日开始自动将Flash广告转换为HTML5格式，这可能会加速HTML5替代Flash的进程，但是这个转变的过程也不是一蹴而就的。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;它新并不表示它安全&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;网络应用开发工程师们在学习新技术的同时需要时刻记住网络安全。HTML5所构建的网页和其他语言编写的网页一样容易泄露一些敏感数据。欧洲网络信息安全机构（European Network and Information Security Agency，ENISA）已经警告说HTML5可能并不够安全。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;它承诺带来一个无缝的网络&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;HTML5会带来一个统一的网络，无论是笔记本，台式机，还是智能手机都应该很方便的浏览基于HTML5的网站。因此在设计网站的时候，开发者需要重新考虑用户体验，网站浏览，网站结构等因素使得这个网站对任何硬件设备都通用。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;它会变成企业的SaaS平台&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;一些重量级的企业，如微软，Salesforce，SAP Sybase正在开发HTML5的开发工具。如果你正在构建企业应用，很可能不久的将来你就要用到HTML5。所以当构建公司的SaaS战略迁移的时候也不要忘记HTML5。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;&lt;strong style=&quot;FONT-WEIGHT: 700&quot;&gt;它将会变得很移动&lt;/strong&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;几乎所有人都热衷于开发独立的移动应用，但是HTML5很可能会是独立移动应用的终结者。由于HTML5将应用的功能直接加入其内核，这很可能引导移动技术潮流重新回到浏览器时代。HTML5允许开发者在（移动）浏览器内开发应用，所以如果你正在制定一项桌面或者移动应用的长期发展策略，你可能需要考虑这一点。&lt;/div&gt;&lt;p&gt;&lt;/p&gt;', 'html应用须知', 1464092755, 1, 0, 445),
(15, 'HTML5（三）', '&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 20px 0px 12px; ZOOM: 1; FONT: 18px/20px &amp;#39;Microsoft YaHei&amp;#39;, SimHei, Verdana; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); CLEAR: both; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para-title level-3&quot;&gt;&lt;h3 style=&quot;PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: rgb(51,51,51); FONT-SIZE: 18px; FONT-WEIGHT: 400; PADDING-TOP: 0px&quot; class=&quot;title-text&quot;&gt;漏洞&lt;/h3&gt;&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;2013年3月，HTML5标记语言的一个漏洞被发现：它允许网站利用数GB垃圾数据对用户展开轰炸，甚至会在短时间内将硬盘塞满。多款主流浏览器均会受此影响。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;一位名叫菲罗斯·阿伯克哈迪杰哈(Feross Aboukhadijeh)的开发者率先发现了这一漏洞，他表示，多数主流网络浏览器均会受到影响，包括苹果&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/110484.htm&quot; target=&quot;_blank&quot;&gt;Safari&lt;/a&gt;、谷歌&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/1835504.htm&quot; target=&quot;_blank&quot;&gt;Chrome&lt;/a&gt;、微软IE和Opera。唯一能够阻止数据大量加载的是&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/393243.htm&quot; target=&quot;_blank&quot;&gt;Mozilla&lt;/a&gt;的火狐浏览器，该产品的数据存储上限为5MB。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;该问题的根源在于HTML5存储本地数据的方式。虽然每个浏览器都有不同的存储参数，但很多都支持用户自定义限制，且至少会在用户电脑上存储2.5MB数据。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;阿伯克哈迪杰哈发现了一个绕过数据上限的方法，它创建了多个与用户访问过的网站链接的临时网站。由于多数浏览器不会计算这种偶然情况，所以二级网站也可以存储与主网站相同量的数据。通过大批生成这种网站，该漏洞便可向受影响的电脑加载海量数据。&lt;/div&gt;&lt;div style=&quot;WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 2em; ZOOM: 1; FONT: 14px/24px arial, 宋体, sans-serif; WORD-WRAP: break-word; WHITE-SPACE: normal; MARGIN-BOTTOM: 15px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px&quot; class=&quot;para&quot; label-module=&quot;para&quot;&gt;在测试这一漏洞的过程中，阿伯克哈迪杰哈每16秒即可向他的&lt;a style=&quot;COLOR: rgb(19,110,194); TEXT-DECORATION: none&quot; href=&quot;http://baike.baidu.com/view/723957.htm&quot; target=&quot;_blank&quot;&gt;固态硬盘&lt;/a&gt;版MacBook Pro中加载1GB数据。他指出，Chrome等32位浏览器可能会在硬盘塞满前崩溃。“一些采用高明代码的网站其实已经取消了用户电脑对数据存储的限制。”阿伯克哈迪杰哈说。阿伯克哈迪杰哈已经发布一组代码来利用该漏洞，并创建了一个名为Filldisk的专用网站来凸显该漏洞的危害。&lt;/div&gt;&lt;p&gt;&lt;/p&gt;', 'html漏洞', 1464092787, 1, 0, 466),
(16, 'DOM节点', '&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot; id=&quot;intro&quot;&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;strong style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; COLOR: rgb(0,0,0); FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: 800; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;在 HTML DOM 中，所有事物都是节点。DOM 是被视为节点树的 HTML。&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;DOM 节点&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;根据 W3C 的 HTML DOM 标准，HTML 文档中的所有内容都是节点：&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;整个文档是一个文档节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;每个 HTML 元素是元素节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;HTML 元素内的文本是文本节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;每个 HTML 属性是属性节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;注释是注释节点&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;HTML DOM 节点树&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;HTML DOM 将 HTML 文档视作树结构。这种结构被称为&lt;em style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; FONT-STYLE: normal; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;节点树&lt;/em&gt;：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;HTML DOM Tree 实例&lt;/h3&gt;&lt;img style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 25px 0px 0px 25px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot; alt=&quot;HTML DOM Node Tree&quot; src=&quot;http://www.w3school.com.cn/i/ct_htmltree.gif&quot;/&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;通过 HTML DOM，树中的所有节点均可通过 JavaScript 进行访问。所有 HTML 元素（节点）均可被修改，也可以创建或删除节点。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;节点父、子和同胞&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;节点树中的节点彼此拥有层级关系。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;父（parent）、子（child）和同胞（sibling）等术语用于描述这些关系。父节点拥有子节点。同级的子节点被称为同胞（兄弟或姐妹）。&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;在节点树中，顶端节点被称为根（root）&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;每个节点都有父节点、除了根（它没有父节点）&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;一个节点可拥有任意数量的子&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;同胞是拥有相同父节点的节点&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;下面的图片展示了节点树的一部分，以及节点之间的关系：&lt;/p&gt;&lt;img style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 25px 0px 0px 25px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot; alt=&quot;DOM 节点关系&quot; src=&quot;http://www.w3school.com.cn/i/dom_navigate.gif&quot;/&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;请看下面的 HTML 片段：&lt;/h2&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;&amp;lt;html&amp;gt;\r\n  &amp;lt;head&amp;gt;\r\n    &amp;lt;title&amp;gt;DOM 教程&amp;lt;/title&amp;gt;\r\n  &amp;lt;/head&amp;gt;\r\n  &amp;lt;body&amp;gt;\r\n    &amp;lt;h1&amp;gt;DOM 第一课&amp;lt;/h1&amp;gt;\r\n    &amp;lt;p&amp;gt;Hello world!&amp;lt;/p&amp;gt;\r\n  &amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;从上面的 HTML 中：&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;html&amp;gt; 节点没有父节点；它是根节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;head&amp;gt; 和 &amp;lt;body&amp;gt; 的父节点是 &amp;lt;html&amp;gt; 节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;文本节点 &amp;quot;Hello world!&amp;quot; 的父节点是 &amp;lt;p&amp;gt; 节点&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;并且：&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;html&amp;gt; 节点拥有两个子节点：&amp;lt;head&amp;gt; 和 &amp;lt;body&amp;gt;&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;head&amp;gt; 节点拥有一个子节点：&amp;lt;title&amp;gt; 节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;title&amp;gt; 节点也拥有一个子节点：文本节点 &amp;quot;DOM 教程&amp;quot;&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;h1&amp;gt; 和 &amp;lt;p&amp;gt; 节点是同胞节点，同时也是 &amp;lt;body&amp;gt; 的子节点&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;并且：&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;head&amp;gt; 元素是 &amp;lt;html&amp;gt; 元素的首个子节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;body&amp;gt; 元素是 &amp;lt;html&amp;gt; 元素的最后一个子节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;h1&amp;gt; 元素是 &amp;lt;body&amp;gt; 元素的首个子节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;p&amp;gt; 元素是 &amp;lt;body&amp;gt; 元素的最后一个子节点&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;警告！&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;DOM 处理中的常见错误是希望元素节点包含文本。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;在本例中：&lt;em style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; FONT-STYLE: normal; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&amp;lt;title&amp;gt;DOM 教程&amp;lt;/title&amp;gt;&lt;/em&gt;，元素节点 &amp;lt;title&amp;gt;，包含值为 &amp;quot;DOM 教程&amp;quot; 的&lt;em style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; FONT-STYLE: normal; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;文本节点&lt;/em&gt;。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;可通过节点的&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; FONT-STYLE: normal; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;innerHTML&lt;/em&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;属性来访问文本节点的值。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;您将在稍后的章节中学习更多有关 innerHTML 属性的知识。&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;', 'DOM节点介绍', 1464097893, 29, 0, 100);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `summary`, `time`, `cid`, `del`, `click`) VALUES
(17, 'HTML DOM 方法', '&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot; id=&quot;intro&quot;&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;方法是我们可以在节点（HTML 元素）上执行的动作。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;编程接口&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;可通过 JavaScript （以及其他编程语言）对 HTML DOM 进行访问。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;所有 HTML 元素被定义为对象，而编程接口则是对象方法和对象属性。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;方法是您能够执行的动作（比如添加或修改元素）。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;属性是您能够获取或设置的值（比如节点的名称或内容）。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;getElementById() 方法&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;getElementById() 方法返回带有指定 ID 的元素：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;例子&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;var element=document.getElementById(&amp;quot;intro&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium none; PADDING-BOTTOM: 6px; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(248,142,139); MARGIN: 12px 0px 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 16px; OUTLINE-WIDTH: 0px; PADDING-RIGHT: 16px; DISPLAY: inline-block; WHITE-SPACE: nowrap; COLOR: rgb(255,255,255); VERTICAL-ALIGN: middle; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: pointer; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 6px; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 3px, rgba(0, 0, 0, 0.239216) 0px 1px 2px; transition: 0.2s ease-out; -webkit-transition: 0.2s ease-out&quot; class=&quot;tiy&quot;&gt;&lt;a style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(255,255,255); BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px&quot; href=&quot;http://www.w3school.com.cn/tiy/t.asp?f=dom_getelementbyid&quot; target=&quot;_blank&quot;&gt;亲自试一试&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;HTML DOM 对象 - 方法和属性&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;一些常用的 HTML DOM 方法：&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;getElementById(id) - 获取带有指定 id 的节点（元素）&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;appendChild(node) - 插入新的子节点（元素）&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;removeChild(node) - 删除子节点（元素）&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;一些常用的 HTML DOM 属性：&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;innerHTML - 节点（元素）的文本值&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;parentNode - 节点（元素）的父节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;childNodes - 节点（元素）的子节点&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;attributes - 节点（元素）的属性节点&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;您将在本教程的下一章中学到更多有关属性的知识。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;现实生活中的对象&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;某个人是一个对象。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;人的方法可能是 eat(), sleep(), work(), play() 等等。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;所有人都有这些方法，但会在不同时间执行它们。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;一个人的属性包括姓名、身高、体重、年龄、性别等等。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;所有人都有这些属性，但它们的值因人而异。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;一些 DOM 对象方法&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;这里提供一些您将在本教程中学到的常用方法：&lt;/p&gt;&lt;table style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px; PADDING-LEFT: 0px; WIDTH: 709.16px; PADDING-RIGHT: 0px; BORDER-COLLAPSE: collapse; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0px&quot; class=&quot;dataintable&quot;&gt;&lt;tbody style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;th style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 5px; BACKGROUND-COLOR: rgb(213,213,213); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: baseline; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 5px&quot;&gt;方法&lt;/th&gt;&lt;th style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 5px; BACKGROUND-COLOR: rgb(213,213,213); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: baseline; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 5px&quot;&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;getElementById()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;返回带有指定 ID 的元素。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;getElementsByTagName()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;getElementsByClassName()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;返回包含带有指定类名的所有元素的节点列表。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;appendChild()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;把新的子节点添加到指定节点。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;removeChild()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;删除子节点。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;replaceChild()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;替换子节点。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;insertBefore()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;在指定的子节点前面插入新的子节点。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;createAttribute()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;创建属性节点。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;createElement()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;创建元素节点。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;createTextNode()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;创建文本节点。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;getAttribute()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;返回指定的属性值。&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;setAttribute()&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;把指定属性设置或修改为指定的值。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;', 'HTML DOM 方法介绍', 1464097928, 29, 0, 432);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `summary`, `time`, `cid`, `del`, `click`) VALUES
(18, 'HTML DOM 属性', '&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot; id=&quot;intro&quot;&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;属性是节点（HTML 元素）的值，您能够获取或设置。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;编程接口&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;可通过 JavaScript （以及其他编程语言）对 HTML DOM 进行访问。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;所有 HTML 元素被定义为对象，而编程接口则是对象方法和对象属性。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;方法是您能够执行的动作（比如添加或修改元素）。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;属性是您能够获取或设置的值（比如节点的名称或内容）。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;innerHTML 属性&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;获取元素内容的最简单方法是使用 innerHTML 属性。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;innerHTML 属性对于获取或替换 HTML 元素的内容很有用。&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例&lt;/h3&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;下面的代码获取 id=&amp;quot;intro&amp;quot; 的 &amp;lt;p&amp;gt; 元素的 innerHTML：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;&amp;lt;html&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n\r\n&amp;lt;p id=&amp;quot;intro&amp;quot;&amp;gt;Hello World!&amp;lt;/p&amp;gt;\r\n\r\n&amp;lt;script&amp;gt;\r\nvar txt=document.getElementById(&amp;quot;intro&amp;quot;).innerHTML;\r\ndocument.write(txt);\r\n&amp;lt;/script&amp;gt;\r\n\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium none; PADDING-BOTTOM: 6px; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(248,142,139); MARGIN: 12px 0px 10px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 16px; OUTLINE-WIDTH: 0px; PADDING-RIGHT: 16px; DISPLAY: inline-block; WHITE-SPACE: nowrap; COLOR: rgb(255,255,255); VERTICAL-ALIGN: middle; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: pointer; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 6px; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 3px, rgba(0, 0, 0, 0.239216) 0px 1px 2px; transition: 0.2s ease-out; -webkit-transition: 0.2s ease-out&quot; class=&quot;tiy&quot;&gt;&lt;a style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(255,255,255); BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px&quot; href=&quot;http://www.w3school.com.cn/tiy/t.asp?f=dom_innerhtml&quot; target=&quot;_blank&quot;&gt;亲自试一试&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;在上面的例子中，getElementById 是一个方法，而 innerHTML 是属性。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;innerHTML 属性可用于获取或改变任意 HTML 元素，包括 &amp;lt;html&amp;gt; 和 &amp;lt;body&amp;gt;。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;nodeName 属性&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;nodeName 属性规定节点的名称。&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;nodeName 是只读的&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;元素节点的 nodeName 与标签名相同&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;属性节点的 nodeName 与属性名相同&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;文本节点的 nodeName 始终是 #text&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;文档节点的 nodeName 始终是 #document&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot; class=&quot;note&quot;&gt;&lt;span style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;注释：&lt;/span&gt;nodeName 始终包含 HTML 元素的大写字母标签名。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;nodeValue 属性&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;nodeValue 属性规定节点的值。&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;元素节点的 nodeValue 是 undefined 或 null&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;文本节点的 nodeValue 是文本本身&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;属性节点的 nodeValue 是属性值&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;获取元素的值&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;下面的例子会取回 &amp;lt;p id=&amp;quot;intro&amp;quot;&amp;gt; 标签的文本节点值：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;&amp;lt;html&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n\r\n&amp;lt;p id=&amp;quot;intro&amp;quot;&amp;gt;Hello World!&amp;lt;/p&amp;gt;\r\n\r\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;\r\nx=document.getElementById(&amp;quot;intro&amp;quot;);\r\ndocument.write(x.firstChild.nodeValue);\r\n&amp;lt;/script&amp;gt;\r\n\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium none; PADDING-BOTTOM: 6px; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(248,142,139); MARGIN: 12px 0px 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 16px; OUTLINE-WIDTH: 0px; PADDING-RIGHT: 16px; DISPLAY: inline-block; WHITE-SPACE: nowrap; COLOR: rgb(255,255,255); VERTICAL-ALIGN: middle; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: pointer; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 6px; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 3px, rgba(0, 0, 0, 0.239216) 0px 1px 2px; transition: 0.2s ease-out; -webkit-transition: 0.2s ease-out&quot; class=&quot;tiy&quot;&gt;&lt;a style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(255,255,255); BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px&quot; href=&quot;http://www.w3school.com.cn/tiy/t.asp?f=dom_firstchild_nodevalue&quot; target=&quot;_blank&quot;&gt;亲自试一试&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;nodeType 属性&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;nodeType 属性返回节点的类型。nodeType 是只读的。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;比较重要的节点类型有：&lt;/p&gt;&lt;table style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px; PADDING-LEFT: 0px; WIDTH: 424.99px; PADDING-RIGHT: 0px; BORDER-COLLAPSE: collapse; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 0px&quot; class=&quot;dataintable&quot;&gt;&lt;tbody style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;th style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 5px; BACKGROUND-COLOR: rgb(213,213,213); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: baseline; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 5px&quot;&gt;元素类型&lt;/th&gt;&lt;th style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 5px; BACKGROUND-COLOR: rgb(213,213,213); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: baseline; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 5px&quot;&gt;NodeType&lt;/th&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;元素&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;属性&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;文本&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;注释&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;8&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;文档&lt;/td&gt;&lt;td style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; BORDER-LEFT: rgb(170,170,170) 1px solid; PADDING-BOTTOM: 6px; BACKGROUND-COLOR: rgb(239,239,239); MARGIN: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 15px; VERTICAL-ALIGN: text-top; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; PADDING-TOP: 6px&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;', 'HTML DOM 属性介绍', 1464097961, 29, 0, 343),
(19, 'HTML DOM 访问', '&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot; id=&quot;intro&quot;&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;访问 HTML DOM - 查找 HTML 元素。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;访问 HTML 元素（节点）&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;访问 HTML 元素等同于访问节点&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;您能够以不同的方式来访问 HTML 元素：&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;通过使用 getElementById() 方法&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;通过使用 getElementsByTagName() 方法&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;通过使用 getElementsByClassName() 方法&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;getElementById() 方法&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;getElementById() 方法返回带有指定 ID 的元素：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;语法&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;node.getElementById(&amp;quot;id&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;下面的例子获取 id=&amp;quot;intro&amp;quot; 的元素：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;document.getElementById(&amp;quot;intro&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium none; PADDING-BOTTOM: 6px; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(248,142,139); MARGIN: 12px 0px 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 16px; OUTLINE-WIDTH: 0px; PADDING-RIGHT: 16px; DISPLAY: inline-block; WHITE-SPACE: nowrap; COLOR: rgb(255,255,255); VERTICAL-ALIGN: middle; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: pointer; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 6px; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 3px, rgba(0, 0, 0, 0.239216) 0px 1px 2px; transition: 0.2s ease-out; -webkit-transition: 0.2s ease-out&quot; class=&quot;tiy&quot;&gt;&lt;a style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(255,255,255); BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px&quot; href=&quot;http://www.w3school.com.cn/tiy/t.asp?f=dom_getelementbyid&quot; target=&quot;_blank&quot;&gt;亲自试一试&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;getElementsByTagName() 方法&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;getElementsByTagName() 返回带有指定标签名的所有元素。&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;语法&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;node.getElementsByTagName(&amp;quot;tagname&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;下面的例子返回包含文档中所有 &amp;lt;p&amp;gt; 元素的列表：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例 1&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;document.getElementsByTagName(&amp;quot;p&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium none; PADDING-BOTTOM: 6px; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(248,142,139); MARGIN: 12px 0px 10px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 16px; OUTLINE-WIDTH: 0px; PADDING-RIGHT: 16px; DISPLAY: inline-block; WHITE-SPACE: nowrap; COLOR: rgb(255,255,255); VERTICAL-ALIGN: middle; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: pointer; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 6px; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 3px, rgba(0, 0, 0, 0.239216) 0px 1px 2px; transition: 0.2s ease-out; -webkit-transition: 0.2s ease-out&quot; class=&quot;tiy&quot;&gt;&lt;a style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(255,255,255); BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px&quot; href=&quot;http://www.w3school.com.cn/tiy/t.asp?f=dom_getelementsbytagname&quot; target=&quot;_blank&quot;&gt;亲自试一试&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;下面的例子返回包含文档中所有 &amp;lt;p&amp;gt; 元素的列表，并且这些 &amp;lt;p&amp;gt; 元素应该是 id=&amp;quot;main&amp;quot; 的元素的后代（子、孙等等）：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例 2&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;document.getElementById(&amp;quot;main&amp;quot;).getElementsByTagName(&amp;quot;p&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium none; PADDING-BOTTOM: 6px; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(248,142,139); MARGIN: 12px 0px 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 16px; OUTLINE-WIDTH: 0px; PADDING-RIGHT: 16px; DISPLAY: inline-block; WHITE-SPACE: nowrap; COLOR: rgb(255,255,255); VERTICAL-ALIGN: middle; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: pointer; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 6px; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 3px, rgba(0, 0, 0, 0.239216) 0px 1px 2px; transition: 0.2s ease-out; -webkit-transition: 0.2s ease-out&quot; class=&quot;tiy&quot;&gt;&lt;a style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(255,255,255); BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px&quot; href=&quot;http://www.w3school.com.cn/tiy/t.asp?f=dom_getelementsbytagname2&quot; target=&quot;_blank&quot;&gt;亲自试一试&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;getElementsByClassName() 方法&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;如果您希望查找带有相同类名的所有 HTML 元素，请使用这个方法：&lt;/p&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;document.getElementsByClassName(&amp;quot;intro&amp;quot;);&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;上面的例子返回包含 class=&amp;quot;intro&amp;quot; 的所有元素的一个列表：&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot; class=&quot;note&quot;&gt;&lt;span style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;注释：&lt;/span&gt;getElementsByClassName() 在 Internet Explorer 5,6,7,8 中无效。&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;', 'HTML DOM 访问介绍', 1464097989, 29, 0, 332);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `summary`, `time`, `cid`, `del`, `click`) VALUES
(20, 'HTML DOM - 修改', '&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot; id=&quot;intro&quot;&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;修改 HTML = 改变元素、属性、样式和事件。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;修改 HTML 元素&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;修改 HTML DOM 意味着许多不同的方面：&lt;/p&gt;&lt;ul style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 10px 0px 0px 35px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;改变 HTML 内容&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;改变 CSS 样式&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;改变 HTML 属性&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;创建新的 HTML 元素&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;删除已有的 HTML 元素&lt;/li&gt;&lt;li style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 3px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;改变事件（处理程序）&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;在接下来的章节，我们会深入学习修改 HTML DOM 的常用方法。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;创建 HTML 内容&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;改变元素内容的最简答的方法是使用 innerHTML 属性。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;下面的例子改变一个 &amp;lt;p&amp;gt; 元素的 HTML 内容：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;&amp;lt;html&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n\r\n&amp;lt;p id=&amp;quot;p1&amp;quot;&amp;gt;Hello World!&amp;lt;/p&amp;gt;\r\n\r\n&amp;lt;script&amp;gt;\r\ndocument.getElementById(&amp;quot;p1&amp;quot;).innerHTML=&amp;quot;New text!&amp;quot;;\r\n&amp;lt;/script&amp;gt;\r\n\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium none; PADDING-BOTTOM: 6px; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(248,142,139); MARGIN: 12px 0px 10px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 16px; OUTLINE-WIDTH: 0px; PADDING-RIGHT: 16px; DISPLAY: inline-block; WHITE-SPACE: nowrap; COLOR: rgb(255,255,255); VERTICAL-ALIGN: middle; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: pointer; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 6px; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 3px, rgba(0, 0, 0, 0.239216) 0px 1px 2px; transition: 0.2s ease-out; -webkit-transition: 0.2s ease-out&quot; class=&quot;tiy&quot;&gt;&lt;a style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(255,255,255); BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px&quot; href=&quot;http://www.w3school.com.cn/tiy/t.asp?f=dom_changetext&quot; target=&quot;_blank&quot;&gt;亲自试一试&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot; class=&quot;tip&quot;&gt;&lt;span style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: rgb(255,153,85); BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;提示：&lt;/span&gt;我们将在下面的章节为您解释例子中的细节。&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;改变 HTML 样式&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;通过 HTML DOM，您能够访问 HTML 元素的样式对象。&lt;/p&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;下面的例子改变一个段落的 HTML 样式：&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;&amp;lt;html&amp;gt;\r\n\r\n&amp;lt;body&amp;gt;\r\n&amp;lt;p id=&amp;quot;p2&amp;quot;&amp;gt;Hello world!&amp;lt;/p&amp;gt;\r\n\r\n&amp;lt;script&amp;gt;\r\ndocument.getElementById(&amp;quot;p2&amp;quot;).style.color=&amp;quot;blue&amp;quot;;\r\n&amp;lt;/script&amp;gt;\r\n\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;p style=&quot;BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium none; PADDING-BOTTOM: 6px; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(248,142,139); MARGIN: 12px 0px 0px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 16px; OUTLINE-WIDTH: 0px; PADDING-RIGHT: 16px; DISPLAY: inline-block; WHITE-SPACE: nowrap; COLOR: rgb(255,255,255); VERTICAL-ALIGN: middle; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: pointer; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 6px; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 3px, rgba(0, 0, 0, 0.239216) 0px 1px 2px; transition: 0.2s ease-out; -webkit-transition: 0.2s ease-out&quot; class=&quot;tiy&quot;&gt;&lt;a style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(255,255,255); BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px&quot; href=&quot;http://www.w3school.com.cn/tiy/t.asp?f=dom_changestyle&quot; target=&quot;_blank&quot;&gt;亲自试一试&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;BORDER-BOTTOM: rgb(170,170,170) 1px solid; TEXT-ALIGN: left; PADDING-BOTTOM: 20px; BORDER-RIGHT-WIDTH: 0px; WIDOWS: 1; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(249,249,249); TEXT-INDENT: 0px; MARGIN: 0px 0px 0px 15px; PADDING-LEFT: 0px; WIDTH: 710px; PADDING-RIGHT: 0px; FONT: 12px Verdana, Arial, 宋体; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-LEFT-WIDTH: 0px; WORD-SPACING: 0px; PADDING-TOP: 20px; -webkit-text-stroke-width: 0px&quot;&gt;&lt;h2 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;创建新的 HTML 元素&lt;/h2&gt;&lt;p style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 12px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;如需向 HTML DOM 添加新元素，您首先必须创建该元素（元素节点），然后把它追加到已有的元素上。&lt;/p&gt;&lt;h3 style=&quot;BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px&quot;&gt;实例&lt;/h3&gt;&lt;pre style=&quot;BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: Consolas, &amp;#39;Courier New&amp;#39;, Courier, monospace; BACKGROUND: rgb(245,245,245); BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px&quot;&gt;&amp;lt;div id=&amp;quot;d1&amp;quot;&amp;gt;\r\n&amp;lt;p id=&amp;quot;p1&amp;quot;&amp;gt;This is a paragraph.&amp;lt;/p&amp;gt;\r\n&amp;lt;p id=&amp;quot;p2&amp;quot;&amp;gt;This is another paragraph.&amp;lt;/p&amp;gt;\r\n&amp;lt;/div&amp;gt;\r\n\r\n&amp;lt;script&amp;gt;\r\nvar para=document.createElement(&amp;quot;p&amp;quot;);\r\nvar node=document.createTextNode(&amp;quot;This is new.&amp;quot;);\r\npara.appendChild(node);\r\n\r\nvar element=document.getElementById(&amp;quot;d1&amp;quot;);\r\nelement.appendChild(para);\r\n&amp;lt;/script&amp;gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;', 'HTML DOM - 修改介绍', 1464098018, 29, 0, 583);

-- --------------------------------------------------------

--
-- 表的结构 `hd_blog_attr`
--

CREATE TABLE IF NOT EXISTS `hd_blog_attr` (
  `bid` int(10) unsigned NOT NULL,
  `aid` int(11) NOT NULL,
  KEY `bid` (`bid`,`aid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `hd_blog_attr`
--

INSERT INTO `hd_blog_attr` (`bid`, `aid`) VALUES
(1, 1),
(1, 2),
(1, 3),
(2, 1),
(2, 2),
(2, 3),
(3, 1),
(3, 2),
(5, 1),
(5, 2),
(5, 3),
(6, 1),
(6, 2),
(7, 1),
(7, 2),
(7, 3),
(8, 1),
(10, 1),
(11, 1),
(11, 2),
(11, 3),
(12, 2),
(13, 1),
(13, 2),
(13, 3),
(14, 1),
(14, 2),
(15, 1),
(15, 3),
(16, 1),
(16, 2),
(17, 1),
(17, 2),
(18, 1),
(19, 1),
(20, 2);

-- --------------------------------------------------------

--
-- 表的结构 `hd_cate`
--

CREATE TABLE IF NOT EXISTS `hd_cate` (
  `id` int(4) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `pid` int(3) NOT NULL,
  `sort` int(3) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=32 ;

--
-- 转存表中的数据 `hd_cate`
--

INSERT INTO `hd_cate` (`id`, `name`, `pid`, `sort`) VALUES
(1, 'HTML', 0, 1),
(2, 'DIV+CSS', 0, 2),
(3, 'JavaScript', 0, 3),
(4, 'PHP', 0, 4),
(5, 'MySQL', 0, 5),
(6, 'Linux', 0, 6),
(7, '其他', 0, 7),
(14, 'jQuery', 3, 1),
(18, '存储引擎', 5, 1),
(17, 'Ajax', 3, 2),
(19, '事务', 5, 2),
(20, '视图', 5, 3),
(21, '存储过程', 5, 4),
(22, '字符串', 4, 1),
(23, '数组', 4, 2),
(24, '对象', 4, 3),
(25, '基本命令', 6, 1),
(26, '网络配置', 6, 2),
(28, '标签', 1, 2),
(29, 'DOM', 1, 1),
(31, 'DOM方法', 30, 1);

-- --------------------------------------------------------

--
-- 表的结构 `hd_url`
--

CREATE TABLE IF NOT EXISTS `hd_url` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `url` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=5 ;

--
-- 转存表中的数据 `hd_url`
--

INSERT INTO `hd_url` (`id`, `name`, `url`) VALUES
(1, '百度一下', 'http://www.baidu.com'),
(3, '谷歌', 'http://www.google.com'),
(4, 'FREEBUF', 'http://freebuf.com');

-- --------------------------------------------------------

--
-- 表的结构 `hd_user`
--

CREATE TABLE IF NOT EXISTS `hd_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(20) NOT NULL,
  `password` char(32) NOT NULL,
  `logintime` int(15) unsigned NOT NULL,
  `loginip` varchar(16) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- 转存表中的数据 `hd_user`
--

INSERT INTO `hd_user` (`id`, `username`, `password`, `logintime`, `loginip`) VALUES
(1, 'admin', '21232f297a57a5a743894a0e4a801fc3', 1464876066, '127.0.0.1');

-- --------------------------------------------------------

--
-- 表的结构 `hd_verify`
--

CREATE TABLE IF NOT EXISTS `hd_verify` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `length` int(2) unsigned DEFAULT '5',
  `fontSize` int(3) unsigned DEFAULT '20',
  `useCurve` tinyint(1) unsigned NOT NULL DEFAULT '1',
  `useNoise` tinyint(1) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- 转存表中的数据 `hd_verify`
--

INSERT INTO `hd_verify` (`id`, `length`, `fontSize`, `useCurve`, `useNoise`) VALUES
(1, 4, 20, 1, 1);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
